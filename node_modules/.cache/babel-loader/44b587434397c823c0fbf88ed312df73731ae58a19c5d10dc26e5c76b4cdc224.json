{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\frontendtotal\\\\src\\\\QnA\\\\host_input\\\\Ansinput.js\",\n  _s = $RefreshSig$();\nimport styles2 from '../style/QnApage_2.module.css';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AnswerSlice from '../Slice/AnswerSlice';\nimport questionSlice from '../Slice/questionSlice';\nimport ChoiceSlice from '../Slice/ChoiceSlice';\nimport Checkbox from '../image/Checkbox.png';\nimport Checked from '../image/Checked.png';\nimport OpencheckSlice from '../Slice/OpencheckSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Ansinput() {\n  _s();\n  const dispatch = useDispatch();\n  const [answer, setanswer] = useState(\"\");\n  const open = useSelector(state => {\n    return state.opencheck;\n  });\n  const ID = useSelector(state => {\n    return state.id_answer.value;\n  });\n  const onsubmit = event => {\n    event.preventDefault();\n    if (answer === \"\") {\n      return;\n    }\n    dispatch(AnswerSlice.actions.up({\n      text: answer,\n      id: ID,\n      type: \"answer\",\n      open: open,\n      clicked: false\n    })); // 답변 생성\n    setanswer(\"\"); // 입력 칸 초기화\n    dispatch(questionSlice.actions.edit(ID)); // 질문 클릭 안된 상태로 돌리기\n    dispatch(questionSlice.actions.openswitch([ID, open])); // 답변, 질문에 공개 여부 설정\n    dispatch(AnswerSlice.actions.openswitch([ID, open]));\n    dispatch(ChoiceSlice.actions.change()); // 입력 창 끄기\n  };\n\n  const onchange = event => setanswer(event.target.value); /* 답변 입력시 answer에 저장 */\n\n  const openswitch = () => {\n    dispatch(OpencheckSlice.actions.change());\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onsubmit,\n    className: styles2.chat,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles2.checkboxzone,\n      onClick: openswitch,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${open ? Checkbox : Checked}`,\n        className: styles2.checkbox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `${open ? '' : styles2.clickedwrite}`,\n        children: \"\\uBE44\\uACF5\\uAC1C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: answer,\n      onChange: onchange,\n      placeholder: \"\\uC5EC\\uAE30\\uC5D0 \\uB2F5\\uBCC0\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n      type: \"text\",\n      className: styles2.answer_input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles2.answer_button\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(Ansinput, \"LUbEpSkRUWHGVco2wmYcTmdJrJ4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Ansinput;\n;\nexport default Ansinput;\nvar _c;\n$RefreshReg$(_c, \"Ansinput\");","map":{"version":3,"names":["styles2","React","useState","useEffect","useDispatch","useSelector","AnswerSlice","questionSlice","ChoiceSlice","Checkbox","Checked","OpencheckSlice","jsxDEV","_jsxDEV","Ansinput","_s","dispatch","answer","setanswer","open","state","opencheck","ID","id_answer","value","onsubmit","event","preventDefault","actions","up","text","id","type","clicked","edit","openswitch","change","onchange","target","onSubmit","className","chat","children","checkboxzone","onClick","src","checkbox","fileName","_jsxFileName","lineNumber","columnNumber","clickedwrite","onChange","placeholder","answer_input","answer_button","_c","$RefreshReg$"],"sources":["C:/react/frontendtotal/src/QnA/host_input/Ansinput.js"],"sourcesContent":["import styles2 from '../style/QnApage_2.module.css';\r\nimport React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport AnswerSlice from '../Slice/AnswerSlice';\r\nimport questionSlice from '../Slice/questionSlice';\r\nimport ChoiceSlice from '../Slice/ChoiceSlice';\r\nimport Checkbox from '../image/Checkbox.png';\r\nimport Checked from '../image/Checked.png';\r\nimport OpencheckSlice from '../Slice/OpencheckSlice';\r\n\r\nfunction Ansinput() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [answer, setanswer] = useState(\"\");\r\n\r\n    const open = useSelector(state=>{\r\n        return state.opencheck;\r\n    });\r\n\r\n    const ID = useSelector(state=>{\r\n        return state.id_answer.value;\r\n    });\r\n\r\n    const onsubmit = (event) => {\r\n        event.preventDefault();\r\n        if (answer === \"\") {\r\n            return;\r\n        }\r\n        dispatch(AnswerSlice.actions.up({text: answer, id: ID, type: \"answer\", open: open, clicked: false})); // 답변 생성\r\n        setanswer(\"\"); // 입력 칸 초기화\r\n        dispatch(questionSlice.actions.edit(ID)); // 질문 클릭 안된 상태로 돌리기\r\n        dispatch(questionSlice.actions.openswitch([ID, open])); // 답변, 질문에 공개 여부 설정\r\n        dispatch(AnswerSlice.actions.openswitch([ID, open]));\r\n        dispatch(ChoiceSlice.actions.change()); // 입력 창 끄기\r\n    }\r\n\r\n    const onchange = (event) => setanswer(event.target.value); /* 답변 입력시 answer에 저장 */ \r\n\r\n    const openswitch = () => {\r\n        dispatch(OpencheckSlice.actions.change());\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onsubmit} className={styles2.chat}>\r\n            <div className={styles2.checkboxzone} onClick={openswitch}>\r\n                <img src={`${open ? Checkbox : Checked}`} className={styles2.checkbox}></img>\r\n                <p className={`${open ? '' : styles2.clickedwrite}`}>비공개</p>\r\n            </div>\r\n            <input value={answer} onChange={onchange} placeholder='여기에 답변을 입력하세요' type='text' className={styles2.answer_input}></input>\r\n            <button className={styles2.answer_button}></button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Ansinput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}