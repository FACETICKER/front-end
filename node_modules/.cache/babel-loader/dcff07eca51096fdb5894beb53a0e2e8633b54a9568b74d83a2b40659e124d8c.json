{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\total2\\\\src\\\\QnA\\\\host_input\\\\EditQues_Modal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Modal from 'react-modal';\nimport styles from '../style/EditQues_Modal.module.css';\nimport questionSlice from '../Slice/questionSlice';\nimport AnswerSlice from '../Slice/AnswerSlice';\nimport Close from '../../img/QnA_img/close_switch.png';\nimport Open from '../../img/QnA_img/open_switch.png';\nimport ShareOrNotSlice from '../Slice/ShareOrNotSlice';\nimport PageSlice from '../Slice/PageSlice';\n\n// 팝업창 띄우기 버튼(전등), faceticker, 나만의 스티커를 만들어보세요, 얼굴형~악세사리 글자 표현 컴포넌트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditQues_Modal = () => {\n  _s();\n  const dispatch = useDispatch();\n  const ques = useSelector(state => {\n    return state.question;\n  });\n  const ID = ques.filter(obj => obj.clicked === true).map(obj => obj.id)[0]; // 클릭한 질문 아이디\n\n  const first_ques_open = ques.filter(obj => obj.clicked === true).map(obj => obj.open)[0]; // 초기 질문 비공개값\n\n  useEffect(() => {\n    dispatch(ShareOrNotSlice.actions.reset());\n    {\n      !first_ques_open && dispatch(ShareOrNotSlice.actions.ques_false());\n    } // 초기 질문 비공개값 불러오기\n  }, []);\n  const ques_open = useSelector(state => {\n    return state.share.ques;\n  }); // 비공개값 왔다갔다 가능하게\n\n  const [quesopen, setquesopen] = useState(ques_open); // 초기 비공개값 설정 완료\n\n  const modalStyle = {\n    overlay: {\n      backgroundColor: 'rgba(0, 0, 0, 0.1)',\n      zIndex: 1000,\n      // z-index 값\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    content: {\n      zIndex: 1001,\n      border: 'none',\n      background: 'none',\n      width: '390px',\n      height: '220px',\n      padding: '0px',\n      margin: '0px',\n      position: 'absolute',\n      top: '75%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      overflow: 'auto',\n      dipslay: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center'\n    }\n  }; // 스타일\n\n  const quesclick = () => {\n    setquesopen(!quesopen);\n    dispatch(ShareOrNotSlice.actions.ques_change());\n  };\n  const close = () => {\n    dispatch(questionSlice.actions.off()); // 질문 클릭 안된 상태로 돌리기\n    dispatch(questionSlice.actions.openswitch([ID, ques_open])); // 답변, 질문에 공개 여부 설정\n    setview(false);\n  };\n  const del = () => {\n    dispatch(questionSlice.actions.off());\n    dispatch(AnswerSlice.actions.off());\n    dispatch(PageSlice.actions.del());\n    setview(false); // 삭제 페이지로 이동\n  };\n\n  const [view, setview] = useState(true); // 처음 렌더링 시 true\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: view,\n      style: modalStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.controlzone,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.sharezone,\n          onClick: quesclick,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.p_style,\n            children: \"\\uBE44\\uACF5\\uAC1C \\uC124\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${quesopen ? Open : Close}`,\n            className: styles.img_ques\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.delzone,\n          onClick: del,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.p_style,\n            children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.closezone,\n        onClick: close,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.p_style2,\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(EditQues_Modal, \"WHvxW4EADrkvZJwxo0/OQZtw3w0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = EditQues_Modal;\nexport default EditQues_Modal;\nvar _c;\n$RefreshReg$(_c, \"EditQues_Modal\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","Modal","styles","questionSlice","AnswerSlice","Close","Open","ShareOrNotSlice","PageSlice","jsxDEV","_jsxDEV","Fragment","_Fragment","EditQues_Modal","_s","dispatch","ques","state","question","ID","filter","obj","clicked","map","id","first_ques_open","open","actions","reset","ques_false","ques_open","share","quesopen","setquesopen","modalStyle","overlay","backgroundColor","zIndex","display","justifyContent","alignItems","content","border","background","width","height","padding","margin","position","top","left","transform","overflow","dipslay","flexDirection","quesclick","ques_change","close","off","openswitch","setview","del","view","children","isOpen","style","className","controlzone","sharezone","onClick","p_style","fileName","_jsxFileName","lineNumber","columnNumber","src","img_ques","delzone","closezone","p_style2","_c","$RefreshReg$"],"sources":["C:/react/total2/src/QnA/host_input/EditQues_Modal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Modal from 'react-modal';\r\nimport styles from '../style/EditQues_Modal.module.css';\r\nimport questionSlice from '../Slice/questionSlice';\r\nimport AnswerSlice from '../Slice/AnswerSlice';\r\nimport Close from '../../img/QnA_img/close_switch.png';\r\nimport Open from '../../img/QnA_img/open_switch.png';\r\nimport ShareOrNotSlice from '../Slice/ShareOrNotSlice';\r\nimport PageSlice from '../Slice/PageSlice';\r\n\r\n// 팝업창 띄우기 버튼(전등), faceticker, 나만의 스티커를 만들어보세요, 얼굴형~악세사리 글자 표현 컴포넌트\r\n\r\nconst EditQues_Modal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const ques = useSelector(state=>{\r\n        return state.question;\r\n    });\r\n\r\n    const ID = ques.filter(obj => obj.clicked === true).map(obj => obj.id)[0]; // 클릭한 질문 아이디\r\n\r\n    const first_ques_open = ques.filter(obj => obj.clicked === true).map(obj => obj.open)[0]; // 초기 질문 비공개값\r\n\r\n    useEffect(() => {\r\n        dispatch(ShareOrNotSlice.actions.reset());\r\n        {!first_ques_open && dispatch(ShareOrNotSlice.actions.ques_false())} // 초기 질문 비공개값 불러오기\r\n    }, []);\r\n\r\n    const ques_open = useSelector(state=>{\r\n        return state.share.ques;\r\n    }); // 비공개값 왔다갔다 가능하게\r\n\r\n    const [quesopen, setquesopen] = useState(ques_open); // 초기 비공개값 설정 완료\r\n\r\n    const modalStyle = {\r\n        overlay: {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.1)',\r\n            zIndex: 1000, // z-index 값\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n        },\r\n        content: {\r\n            zIndex: 1001,\r\n            border: 'none',\r\n            background: 'none',\r\n            width: '390px',\r\n            height: '220px',\r\n            padding: '0px',\r\n            margin: '0px',\r\n            position: 'absolute',\r\n            top: '75%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            overflow: 'auto',\r\n            dipslay: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n        }\r\n    }; // 스타일\r\n\r\n    const quesclick = () => {\r\n        setquesopen(!quesopen);\r\n        dispatch(ShareOrNotSlice.actions.ques_change());\r\n    }\r\n\r\n    const close = () => {\r\n        dispatch(questionSlice.actions.off()); // 질문 클릭 안된 상태로 돌리기\r\n        dispatch(questionSlice.actions.openswitch([ID, ques_open])); // 답변, 질문에 공개 여부 설정\r\n        setview(false);\r\n    }\r\n\r\n    const del = () => {\r\n        dispatch(questionSlice.actions.off());\r\n        dispatch(AnswerSlice.actions.off());\r\n        dispatch(PageSlice.actions.del());\r\n        setview(false);     // 삭제 페이지로 이동\r\n    }\r\n\r\n    const [view, setview] = useState(true); // 처음 렌더링 시 true\r\n\r\n    return (\r\n        <>\r\n            <Modal isOpen={view} style={modalStyle}>\r\n                <div className={styles.controlzone}>\r\n                    <div className={styles.sharezone} onClick={quesclick}>\r\n                        <p className={styles.p_style}>비공개 설정</p>\r\n                        <img src={`${quesopen ? Open : Close}`} className={styles.img_ques}></img>\r\n                    </div>\r\n                    <div className={styles.delzone} onClick={del}>\r\n                        <p className={styles.p_style}>삭제하기</p>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.closezone} onClick={close}>\r\n                    <p className={styles.p_style2}>취소</p>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditQues_Modal;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}