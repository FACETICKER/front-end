{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\front-end-total\\\\src\\\\QnA\\\\guest_input\\\\Guest_Btn.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styles2 from './Guest_Btn.module.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport questionSlice from '../Slice/questionSlice';\nimport ID_answerSlice from '../Slice/ID_AnswerSlice';\nimport AnswerSlice from '../Slice/AnswerSlice';\nimport Buttons_idSlice from '../Slice/Buttons_idSlice';\nimport ChoiceSlice from '../Slice/ChoiceSlice';\nimport Answer_button from '../host_input/Answer_button';\nimport Choice_Modal from '../host_input/Choice_Modal';\nimport ModalpositionSlice from '../Slice/ModalpositionSlice';\nimport Basicquestionbtn from '../image/basicquestionbtn.png';\nimport PageSlice from '../Slice/PageSlice';\nimport New_mark from '../image/new_mark.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Guest_Btn(props) {\n  _s();\n  const dispatch = useDispatch();\n  const ans = useSelector(state => state.answer);\n  const ques = useSelector(state => {\n    return state.question;\n  });\n  const [hasMatchingId, setHasMatchingId] = useState(false); // 질문과 같은 id를 가진 답변이 존재하는지 여부\n  const [filtered, setFiltered] = useState([]); // id가 같은 답변\n\n  useEffect(() => {\n    const count = ques.filter(obj => obj.clicked === true).length;\n    {\n      count > 1 && dispatch(questionSlice.actions.off());\n    }\n    ; // 2개 이상 버튼 눌릴 경우 다 꺼버림\n    const count2 = ans.filter(obj => obj.clicked === true).length;\n    {\n      count > 0 && count2 > 0 && dispatch(questionSlice.actions.off());\n    }\n    ; // 질문과 답변 모두 클릭(결국 2개 이상 버튼 눌리는 경우) 다 끔\n    {\n      count > 0 && count2 > 0 && dispatch(AnswerSlice.actions.off());\n    }\n    ;\n    {\n      count2 > 1 && dispatch(AnswerSlice.actions.off());\n    }\n    ;\n  }, []);\n  useEffect(() => {\n    const matchingIds = ans.filter(item => item.id === props.id);\n    setHasMatchingId(matchingIds.length > 0);\n    setFiltered(matchingIds);\n  }, [ans, props.id]);\n  const open = ques.filter(obj => obj.id === props.id).map(obj => obj.open)[0];\n\n  // view가 true면 답변 내역, false면 미답변 내역\n\n  const classNames = [styles2.buttonArray,\n  // 기본 스타일 (container)\n  open ? '' : styles2.lock].join(' ');\n  const scrollRef = useRef();\n  useEffect(() => {\n    scrollRef.current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'end',\n      inline: 'nearest'\n    });\n  }, [ques]); // 질문 추가 시 끝까지 아래로 스크롤\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles2.buttonbackground,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classNames,\n        id: props.id,\n        type: props.type,\n        \"data-open\": props.open,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles2.buttontext,\n          children: open && props.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), hasMatchingId && filtered.map(item => /*#__PURE__*/_jsxDEV(Answer_button, {\n      id: item.id,\n      type: item.type,\n      open: item.open,\n      text: item.text,\n      clicked: item.clicked\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: scrollRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(Guest_Btn, \"4Y92Pn0+t8y2HEXaf/Kn7njeCuI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Guest_Btn;\n;\nexport default Guest_Btn;\nvar _c;\n$RefreshReg$(_c, \"Guest_Btn\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styles2","useDispatch","useSelector","questionSlice","ID_answerSlice","AnswerSlice","Buttons_idSlice","ChoiceSlice","Answer_button","Choice_Modal","ModalpositionSlice","Basicquestionbtn","PageSlice","New_mark","jsxDEV","_jsxDEV","Guest_Btn","props","_s","dispatch","ans","state","answer","ques","question","hasMatchingId","setHasMatchingId","filtered","setFiltered","count","filter","obj","clicked","length","actions","off","count2","matchingIds","item","id","open","map","classNames","buttonArray","lock","join","scrollRef","current","scrollIntoView","behavior","block","inline","children","className","buttonbackground","type","buttontext","text","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/front-end-total/src/QnA/guest_input/Guest_Btn.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport styles2 from './Guest_Btn.module.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport questionSlice from '../Slice/questionSlice';\r\nimport ID_answerSlice from '../Slice/ID_AnswerSlice';\r\nimport AnswerSlice from '../Slice/AnswerSlice';\r\nimport Buttons_idSlice from '../Slice/Buttons_idSlice';\r\nimport ChoiceSlice from '../Slice/ChoiceSlice';\r\nimport Answer_button from '../host_input/Answer_button';\r\nimport Choice_Modal from '../host_input/Choice_Modal';\r\nimport ModalpositionSlice from '../Slice/ModalpositionSlice';\r\nimport Basicquestionbtn from '../image/basicquestionbtn.png';\r\nimport PageSlice from '../Slice/PageSlice';\r\nimport New_mark from '../image/new_mark.png';\r\n\r\nfunction Guest_Btn(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const ans = useSelector(state => state.answer);\r\n\r\n    const ques = useSelector(state=>{\r\n        return state.question;\r\n    });\r\n\r\n    const [hasMatchingId, setHasMatchingId] = useState(false); // 질문과 같은 id를 가진 답변이 존재하는지 여부\r\n    const [filtered, setFiltered] = useState([]);  // id가 같은 답변\r\n\r\n    useEffect(() => {\r\n        const count = ques.filter(obj => obj.clicked === true).length;\r\n        {count > 1 && (dispatch(questionSlice.actions.off()))}; // 2개 이상 버튼 눌릴 경우 다 꺼버림\r\n        const count2 = ans.filter(obj => obj.clicked === true).length;\r\n        {count > 0 && count2 > 0 && (dispatch(questionSlice.actions.off()))}; // 질문과 답변 모두 클릭(결국 2개 이상 버튼 눌리는 경우) 다 끔\r\n        {count > 0 && count2 > 0 && (dispatch(AnswerSlice.actions.off()))};\r\n        {count2 > 1 && (dispatch(AnswerSlice.actions.off()))};\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const matchingIds = ans.filter(item => item.id === props.id);   \r\n        setHasMatchingId(matchingIds.length > 0);\r\n        setFiltered(matchingIds);\r\n    }, [ans, props.id]);\r\n\r\n    const open = ques.filter(obj => obj.id === props.id).map(obj => obj.open)[0];\r\n\r\n    // view가 true면 답변 내역, false면 미답변 내역\r\n\r\n    const classNames = [\r\n        styles2.buttonArray, // 기본 스타일 (container)\r\n        open ? '' : styles2.lock,\r\n    ].join(' ');\r\n\r\n    const scrollRef = useRef();\r\n\r\n    useEffect(() => {\r\n        scrollRef.current.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'nearest' });\r\n    }, [ques]); // 질문 추가 시 끝까지 아래로 스크롤\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles2.buttonbackground}>\r\n                <button className={classNames} id={props.id} type={props.type} data-open={props.open}>\r\n                    <span className={styles2.buttontext}>{open && (props.text)}</span>\r\n                </button>\r\n            </div>\r\n            {hasMatchingId && (\r\n                filtered.map(item => (\r\n                    <Answer_button key={item.id} id={item.id} type={item.type} open={item.open} text={item.text} clicked={item.clicked}></Answer_button>\r\n                ))\r\n            )}\r\n            <div ref={scrollRef}></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Guest_Btn;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,OAAO,MAAM,wBAAwB;AAC5C,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,OAAOC,aAAa,MAAM,wBAAwB;AAClD,OAAOC,cAAc,MAAM,yBAAyB;AACpD,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,eAAe,MAAM,0BAA0B;AACtD,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,kBAAkB,MAAM,6BAA6B;AAC5D,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAEtB,MAAMC,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAE9B,MAAMmB,GAAG,GAAGlB,WAAW,CAACmB,KAAK,IAAIA,KAAK,CAACC,MAAM,CAAC;EAE9C,MAAMC,IAAI,GAAGrB,WAAW,CAACmB,KAAK,IAAE;IAC5B,OAAOA,KAAK,CAACG,QAAQ;EACzB,CAAC,CAAC;EAEF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3D,MAAM,CAAC8B,QAAQ,EAAEC,WAAW,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;;EAE/CC,SAAS,CAAC,MAAM;IACZ,MAAM+B,KAAK,GAAGN,IAAI,CAACO,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,OAAO,KAAK,IAAI,CAAC,CAACC,MAAM;IAC7D;MAACJ,KAAK,GAAG,CAAC,IAAKV,QAAQ,CAAChB,aAAa,CAAC+B,OAAO,CAACC,GAAG,CAAC,CAAC,CAAE;IAAA;IAAC,CAAC,CAAC;IACxD,MAAMC,MAAM,GAAGhB,GAAG,CAACU,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,OAAO,KAAK,IAAI,CAAC,CAACC,MAAM;IAC7D;MAACJ,KAAK,GAAG,CAAC,IAAIO,MAAM,GAAG,CAAC,IAAKjB,QAAQ,CAAChB,aAAa,CAAC+B,OAAO,CAACC,GAAG,CAAC,CAAC,CAAE;IAAA;IAAC,CAAC,CAAC;IACtE;MAACN,KAAK,GAAG,CAAC,IAAIO,MAAM,GAAG,CAAC,IAAKjB,QAAQ,CAACd,WAAW,CAAC6B,OAAO,CAACC,GAAG,CAAC,CAAC,CAAE;IAAA;IAAC;IAClE;MAACC,MAAM,GAAG,CAAC,IAAKjB,QAAQ,CAACd,WAAW,CAAC6B,OAAO,CAACC,GAAG,CAAC,CAAC,CAAE;IAAA;IAAC;EACzD,CAAC,EAAE,EAAE,CAAC;EAENrC,SAAS,CAAC,MAAM;IACZ,MAAMuC,WAAW,GAAGjB,GAAG,CAACU,MAAM,CAACQ,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKtB,KAAK,CAACsB,EAAE,CAAC;IAC5Db,gBAAgB,CAACW,WAAW,CAACJ,MAAM,GAAG,CAAC,CAAC;IACxCL,WAAW,CAACS,WAAW,CAAC;EAC5B,CAAC,EAAE,CAACjB,GAAG,EAAEH,KAAK,CAACsB,EAAE,CAAC,CAAC;EAEnB,MAAMC,IAAI,GAAGjB,IAAI,CAACO,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACQ,EAAE,KAAKtB,KAAK,CAACsB,EAAE,CAAC,CAACE,GAAG,CAACV,GAAG,IAAIA,GAAG,CAACS,IAAI,CAAC,CAAC,CAAC,CAAC;;EAE5E;;EAEA,MAAME,UAAU,GAAG,CACf1C,OAAO,CAAC2C,WAAW;EAAE;EACrBH,IAAI,GAAG,EAAE,GAAGxC,OAAO,CAAC4C,IAAI,CAC3B,CAACC,IAAI,CAAC,GAAG,CAAC;EAEX,MAAMC,SAAS,GAAG/C,MAAM,CAAC,CAAC;EAE1BD,SAAS,CAAC,MAAM;IACZgD,SAAS,CAACC,OAAO,CAACC,cAAc,CAAC;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,KAAK,EAAE,KAAK;MAAEC,MAAM,EAAE;IAAU,CAAC,CAAC;EAC7F,CAAC,EAAE,CAAC5B,IAAI,CAAC,CAAC,CAAC,CAAC;;EAEZ,oBACIR,OAAA;IAAAqC,QAAA,gBACIrC,OAAA;MAAKsC,SAAS,EAAErD,OAAO,CAACsD,gBAAiB;MAAAF,QAAA,eACrCrC,OAAA;QAAQsC,SAAS,EAAEX,UAAW;QAACH,EAAE,EAAEtB,KAAK,CAACsB,EAAG;QAACgB,IAAI,EAAEtC,KAAK,CAACsC,IAAK;QAAC,aAAWtC,KAAK,CAACuB,IAAK;QAAAY,QAAA,eACjFrC,OAAA;UAAMsC,SAAS,EAAErD,OAAO,CAACwD,UAAW;UAAAJ,QAAA,EAAEZ,IAAI,IAAKvB,KAAK,CAACwC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EACLpC,aAAa,IACVE,QAAQ,CAACc,GAAG,CAACH,IAAI,iBACbvB,OAAA,CAACP,aAAa;MAAe+B,EAAE,EAAED,IAAI,CAACC,EAAG;MAACgB,IAAI,EAAEjB,IAAI,CAACiB,IAAK;MAACf,IAAI,EAAEF,IAAI,CAACE,IAAK;MAACiB,IAAI,EAAEnB,IAAI,CAACmB,IAAK;MAACzB,OAAO,EAAEM,IAAI,CAACN;IAAQ,GAA/FM,IAAI,CAACC,EAAE;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAwG,CACtI,CACJ,eACD9C,OAAA;MAAK+C,GAAG,EAAEhB;IAAU;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEd;AAAC3C,EAAA,CA1DQF,SAAS;EAAA,QAEGf,WAAW,EAEhBC,WAAW,EAEVA,WAAW;AAAA;AAAA6D,EAAA,GANnB/C,SAAS;AA0DjB;AAED,eAAeA,SAAS;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}