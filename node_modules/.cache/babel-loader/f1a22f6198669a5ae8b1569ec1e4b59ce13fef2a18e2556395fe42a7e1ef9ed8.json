{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\imzza\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\Faceticker\\\\Total2\\\\front-end\\\\src\\\\MakeSticker\\\\StatusBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Status1 from \"./image/status_bar_1.png\";\nimport Status2 from \"./image/status_bar_2.png\";\nimport Status3 from \"./image/status_bar_3.png\";\nimport Status4 from \"./image/status_bar_4.png\";\nimport Status5 from \"./image/status_bar_5.png\";\nimport Status6 from \"./image/status_bar_6.png\";\nimport Status7 from \"./image/status_bar_7.png\";\nimport styles from \"./style/Status.module.css\";\n\n// 진행 상황 표시하는 바 관리 컴포넌트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatusBar = () => {\n  _s();\n  const steps = useSelector(state => {\n    return state.sticker.step;\n  });\n  const [bar, setbar] = useState();\n  useEffect(() => {\n    if (steps === 0) {\n      setbar(Status1);\n    }\n    if (steps === 1) {\n      setbar(Status2);\n    }\n    if (steps === 2) {\n      setbar(Status3);\n    }\n    if (steps === 3) {\n      setbar(Status4);\n    }\n    if (steps === 4) {\n      setbar(Status5);\n    }\n    if (steps === 5) {\n      setbar(Status6);\n    }\n    if (steps === 6) {\n      setbar(Status7);\n    }\n  }, [steps]); // step에 따라 이미지 바꾸는 간단한 노가다 코드\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.bar,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: bar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(StatusBar, \"ffIwrARCvMIUTChfkvFCKavWLa0=\", false, function () {\n  return [useSelector];\n});\n_c = StatusBar;\nexport default StatusBar;\nvar _c;\n$RefreshReg$(_c, \"StatusBar\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","Status1","Status2","Status3","Status4","Status5","Status6","Status7","styles","jsxDEV","_jsxDEV","StatusBar","_s","steps","state","sticker","step","bar","setbar","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/imzza/OneDrive/바탕 화면/Faceticker/Total2/front-end/src/MakeSticker/StatusBar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Status1 from \"./image/status_bar_1.png\";\r\nimport Status2 from \"./image/status_bar_2.png\";\r\nimport Status3 from \"./image/status_bar_3.png\";\r\nimport Status4 from \"./image/status_bar_4.png\";\r\nimport Status5 from \"./image/status_bar_5.png\";\r\nimport Status6 from \"./image/status_bar_6.png\";\r\nimport Status7 from \"./image/status_bar_7.png\";\r\nimport styles from \"./style/Status.module.css\";\r\n\r\n// 진행 상황 표시하는 바 관리 컴포넌트\r\n\r\nconst StatusBar = () => {\r\n  const steps = useSelector((state) => {\r\n    return state.sticker.step;\r\n  });\r\n\r\n  const [bar, setbar] = useState();\r\n\r\n  useEffect(() => {\r\n    if (steps === 0) {\r\n      setbar(Status1);\r\n    }\r\n    if (steps === 1) {\r\n      setbar(Status2);\r\n    }\r\n    if (steps === 2) {\r\n      setbar(Status3);\r\n    }\r\n    if (steps === 3) {\r\n      setbar(Status4);\r\n    }\r\n    if (steps === 4) {\r\n      setbar(Status5);\r\n    }\r\n    if (steps === 5) {\r\n      setbar(Status6);\r\n    }\r\n    if (steps === 6) {\r\n      setbar(Status7);\r\n    }\r\n  }, [steps]); // step에 따라 이미지 바꾸는 간단한 노가다 코드\r\n\r\n  return (\r\n    <div className={styles.bar}>\r\n      <img src={bar}></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatusBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,2BAA2B;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,KAAK,GAAGb,WAAW,CAAEc,KAAK,IAAK;IACnC,OAAOA,KAAK,CAACC,OAAO,CAACC,IAAI;EAC3B,CAAC,CAAC;EAEF,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGrB,QAAQ,CAAC,CAAC;EAEhCC,SAAS,CAAC,MAAM;IACd,IAAIe,KAAK,KAAK,CAAC,EAAE;MACfK,MAAM,CAACjB,OAAO,CAAC;IACjB;IACA,IAAIY,KAAK,KAAK,CAAC,EAAE;MACfK,MAAM,CAAChB,OAAO,CAAC;IACjB;IACA,IAAIW,KAAK,KAAK,CAAC,EAAE;MACfK,MAAM,CAACf,OAAO,CAAC;IACjB;IACA,IAAIU,KAAK,KAAK,CAAC,EAAE;MACfK,MAAM,CAACd,OAAO,CAAC;IACjB;IACA,IAAIS,KAAK,KAAK,CAAC,EAAE;MACfK,MAAM,CAACb,OAAO,CAAC;IACjB;IACA,IAAIQ,KAAK,KAAK,CAAC,EAAE;MACfK,MAAM,CAACZ,OAAO,CAAC;IACjB;IACA,IAAIO,KAAK,KAAK,CAAC,EAAE;MACfK,MAAM,CAACX,OAAO,CAAC;IACjB;EACF,CAAC,EAAE,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,oBACEH,OAAA;IAAKS,SAAS,EAAEX,MAAM,CAACS,GAAI;IAAAG,QAAA,eACzBV,OAAA;MAAKW,GAAG,EAAEJ;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV,CAAC;AAACb,EAAA,CApCID,SAAS;EAAA,QACCX,WAAW;AAAA;AAAA0B,EAAA,GADrBf,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}