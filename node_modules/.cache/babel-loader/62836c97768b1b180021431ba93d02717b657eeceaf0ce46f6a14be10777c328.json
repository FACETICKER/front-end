{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\frontendtotal\\\\src\\\\QnA\\\\QnApage_guest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Logo from \"../img/QnA_img/logo.png\";\nimport styles from \"./style/QnApage.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport questionSlice from \"./Slice/questionSlice\";\nimport IDSlice from \"./Slice/IDSlice\";\nimport Nickname from \"./Nickname\";\nimport Quesinput from \"./guest_input/Quesinput\";\nimport Guest_Btn from \"./guest_input/Guest_Btn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QnApage_guest() {\n  _s();\n  /*\r\n    function Btn(props) {\r\n        return (\r\n            <button className={styles.buttonArray} id={props.id} type={props.type} data-open={props.open}>{props.text}</button>\r\n        );\r\n    };\r\n    */\n\n  const dispatch = useDispatch();\n  const ID = useSelector(state => {\n    return state.idcounter.value;\n  });\n  const ques = useSelector(state => {\n    return state.question;\n  });\n  const onsubmit = event => {\n    event.preventDefault();\n    if (question === \"\") {\n      return;\n    }\n    dispatch(IDSlice.actions.up(1));\n    dispatch(questionSlice.actions.up({\n      text: question,\n      id: ID,\n      type: \"question\",\n      open: true,\n      clicked: false\n    }));\n    setquestion(\"\");\n  };\n\n  /* (redux 확인용)\r\n    useEffect(() => {\r\n        console.log(ques);\r\n    }, [ques]);\r\n    */\n\n  const [question, setquestion] = useState(\"\");\n  const inputing = event => setquestion(event.target.value);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.background,\n    children: [/*#__PURE__*/_jsxDEV(Nickname, {\n      page: \"guest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttons,\n      children: ques.map((item, index) => /*#__PURE__*/_jsxDEV(Guest_Btn, {\n        text: item.text,\n        id: item.id,\n        type: item.type,\n        open: item.open,\n        clicked: item.clicked\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.ans,\n      children: /*#__PURE__*/_jsxDEV(Quesinput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(QnApage_guest, \"cvOrDQkrdz3xTxbXX9llJgwfyjM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = QnApage_guest;\nexport default QnApage_guest;\nvar _c;\n$RefreshReg$(_c, \"QnApage_guest\");","map":{"version":3,"names":["React","useState","useEffect","Logo","styles","useDispatch","useSelector","questionSlice","IDSlice","Nickname","Quesinput","Guest_Btn","jsxDEV","_jsxDEV","QnApage_guest","_s","dispatch","ID","state","idcounter","value","ques","question","onsubmit","event","preventDefault","actions","up","text","id","type","open","clicked","setquestion","inputing","target","className","background","children","page","fileName","_jsxFileName","lineNumber","columnNumber","buttons","map","item","index","ans","_c","$RefreshReg$"],"sources":["C:/react/frontendtotal/src/QnA/QnApage_guest.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Logo from \"../img/QnA_img/logo.png\";\r\nimport styles from \"./style/QnApage.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport questionSlice from \"./Slice/questionSlice\";\r\nimport IDSlice from \"./Slice/IDSlice\";\r\nimport Nickname from \"./Nickname\";\r\nimport Quesinput from \"./guest_input/Quesinput\";\r\nimport Guest_Btn from \"./guest_input/Guest_Btn\";\r\n\r\nfunction QnApage_guest() {\r\n  /*\r\n    function Btn(props) {\r\n        return (\r\n            <button className={styles.buttonArray} id={props.id} type={props.type} data-open={props.open}>{props.text}</button>\r\n        );\r\n    };\r\n    */\r\n\r\n  const dispatch = useDispatch();\r\n  const ID = useSelector((state) => {\r\n    return state.idcounter.value;\r\n  });\r\n\r\n  const ques = useSelector((state) => {\r\n    return state.question;\r\n  });\r\n\r\n  const onsubmit = (event) => {\r\n    event.preventDefault();\r\n    if (question === \"\") {\r\n      return;\r\n    }\r\n    dispatch(IDSlice.actions.up(1));\r\n    dispatch(\r\n      questionSlice.actions.up({\r\n        text: question,\r\n        id: ID,\r\n        type: \"question\",\r\n        open: true,\r\n        clicked: false,\r\n      })\r\n    );\r\n    setquestion(\"\");\r\n  };\r\n\r\n  /* (redux 확인용)\r\n    useEffect(() => {\r\n        console.log(ques);\r\n    }, [ques]);\r\n    */\r\n\r\n  const [question, setquestion] = useState(\"\");\r\n\r\n  const inputing = (event) => setquestion(event.target.value);\r\n\r\n  return (\r\n    <div className={styles.background}>\r\n      <Nickname page=\"guest\" />\r\n      <div className={styles.buttons}>\r\n        {ques.map((item, index) => (\r\n          <Guest_Btn\r\n            key={index}\r\n            text={item.text}\r\n            id={item.id}\r\n            type={item.type}\r\n            open={item.open}\r\n            clicked={item.clicked}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className={styles.ans}>\r\n        <Quesinput />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QnApage_guest;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,yBAAyB;AAC1C,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB;AACF;AACA;AACA;AACA;AACA;AACA;;EAEE,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,EAAE,GAAGX,WAAW,CAAEY,KAAK,IAAK;IAChC,OAAOA,KAAK,CAACC,SAAS,CAACC,KAAK;EAC9B,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAGf,WAAW,CAAEY,KAAK,IAAK;IAClC,OAAOA,KAAK,CAACI,QAAQ;EACvB,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAIC,KAAK,IAAK;IAC1BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAIH,QAAQ,KAAK,EAAE,EAAE;MACnB;IACF;IACAN,QAAQ,CAACR,OAAO,CAACkB,OAAO,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/BX,QAAQ,CACNT,aAAa,CAACmB,OAAO,CAACC,EAAE,CAAC;MACvBC,IAAI,EAAEN,QAAQ;MACdO,EAAE,EAAEZ,EAAE;MACNa,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAE,IAAI;MACVC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IACDC,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;;EAED;AACF;AACA;AACA;AACA;;EAEE,MAAM,CAACX,QAAQ,EAAEW,WAAW,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMiC,QAAQ,GAAIV,KAAK,IAAKS,WAAW,CAACT,KAAK,CAACW,MAAM,CAACf,KAAK,CAAC;EAE3D,oBACEP,OAAA;IAAKuB,SAAS,EAAEhC,MAAM,CAACiC,UAAW;IAAAC,QAAA,gBAChCzB,OAAA,CAACJ,QAAQ;MAAC8B,IAAI,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzB9B,OAAA;MAAKuB,SAAS,EAAEhC,MAAM,CAACwC,OAAQ;MAAAN,QAAA,EAC5BjB,IAAI,CAACwB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpBlC,OAAA,CAACF,SAAS;QAERiB,IAAI,EAAEkB,IAAI,CAAClB,IAAK;QAChBC,EAAE,EAAEiB,IAAI,CAACjB,EAAG;QACZC,IAAI,EAAEgB,IAAI,CAAChB,IAAK;QAChBC,IAAI,EAAEe,IAAI,CAACf,IAAK;QAChBC,OAAO,EAAEc,IAAI,CAACd;MAAQ,GALjBe,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN9B,OAAA;MAAKuB,SAAS,EAAEhC,MAAM,CAAC4C,GAAI;MAAAV,QAAA,eACzBzB,OAAA,CAACH,SAAS;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC5B,EAAA,CAlEQD,aAAa;EAAA,QASHT,WAAW,EACjBC,WAAW,EAITA,WAAW;AAAA;AAAA2C,EAAA,GAdjBnC,aAAa;AAoEtB,eAAeA,aAAa;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}