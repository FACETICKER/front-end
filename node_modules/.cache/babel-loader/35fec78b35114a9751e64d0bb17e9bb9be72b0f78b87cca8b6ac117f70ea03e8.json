{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\total2\\\\src\\\\Stickers\\\\TestBottom.js\",\n  _s = $RefreshSig$();\nimport styled from \"styled-components\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setIsImageFixed } from \"./reducers\";\nimport { useDrag } from \"react-use-gesture\";\nimport { useEffect, useState } from \"react\";\nimport { useGesture } from \"react-use-gesture\";\n//방문자 기록 컴포넌트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HostImg = styled.img`\n  max-width: 100px;\n  max-height: 150px;\n  display: flex;\n  position: absolute;\n  transform: translate(-40%, -50%);\n  top: 40%;\n  left: 50%;\n`;\n_c = HostImg;\nconst BottomWrap = styled.div`\n  height: 60%;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n`;\n_c2 = BottomWrap;\nconst Bottom = styled.div`\n  border-radius: 40px;\n  border: 2px solid var(--unnamed, #12151c);\n  background: #fff;\n  width: 90%;\n  height: 90%;\n`;\n_c3 = Bottom;\nexport function TestBottom() {\n  _s();\n  const [imageUrl, setImageUrl] = useState(null);\n  const [imagePosition, setImagePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isImageVisible, setIsImageVisible] = useState(false);\n  const [hostImageUrl, setHostImageUrl] = useState(null);\n  const isImageFixed = useSelector(state => state.app.isImageFixed);\n  useEffect(() => {\n    fetch(\"http://localhost:3001/imgUrl/1\").then(response => response.json()).then(data => {\n      if (data.url) {\n        setHostImageUrl(data.url);\n      }\n    }).catch(error => {\n      console.error(\"오류 발생\", error);\n    });\n  }, []);\n  const dispatch = useDispatch();\n  const handleFetchImageAndImageClick = async event => {\n    try {\n      const response = await fetch(\"http://localhost:3001/imgUrl/2\");\n      const data = await response.json();\n      setImageUrl(data.url);\n      setImagePosition({\n        x: event.clientX,\n        y: event.clientY\n      });\n      console.log(imagePosition);\n      setIsImageVisible(true);\n      dispatch(setIsImageFixed(false)); // 이미지 클릭 시, 스티커 고정 상태를 해제\n    } catch (error) {\n      console.error(\"이미지 URL 가져오기 오류:\", error);\n    }\n  };\n  useEffect(() => {\n    if (isImageFixed) {\n      fetch(\"http://localhost:3001/imgUrl\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          imgposition: imagePosition\n        })\n      }).then(response => response.json()).catch(error => {\n        console.error(\"오류 발생\", error);\n      });\n    }\n  }, [isImageFixed]);\n  return /*#__PURE__*/_jsxDEV(BottomWrap, {\n    children: /*#__PURE__*/_jsxDEV(Bottom, {\n      children: [!isImageFixed && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          width: \"85%\",\n          height: \"85%\"\n        },\n        onClick: handleFetchImageAndImageClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HostImg, {\n        src: hostImageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), isImageVisible && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        style: {\n          maxWidth: \"100px\",\n          position: \"absolute\",\n          top: imagePosition.y,\n          left: imagePosition.x,\n          zIndex: 9999\n        },\n        alt: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(TestBottom, \"tWATYkmUpg8ibf+yES+nyxGM7MA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c4 = TestBottom;\nexport default TestBottom;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"HostImg\");\n$RefreshReg$(_c2, \"BottomWrap\");\n$RefreshReg$(_c3, \"Bottom\");\n$RefreshReg$(_c4, \"TestBottom\");","map":{"version":3,"names":["styled","React","useSelector","useDispatch","setIsImageFixed","useDrag","useEffect","useState","useGesture","jsxDEV","_jsxDEV","HostImg","img","_c","BottomWrap","div","_c2","Bottom","_c3","TestBottom","_s","imageUrl","setImageUrl","imagePosition","setImagePosition","x","y","isImageVisible","setIsImageVisible","hostImageUrl","setHostImageUrl","isImageFixed","state","app","fetch","then","response","json","data","url","catch","error","console","dispatch","handleFetchImageAndImageClick","event","clientX","clientY","log","method","headers","body","JSON","stringify","imgposition","children","style","display","width","height","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","maxWidth","position","top","left","zIndex","alt","_c4","$RefreshReg$"],"sources":["C:/react/total2/src/Stickers/TestBottom.js"],"sourcesContent":["import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setIsImageFixed } from \"./reducers\";\r\nimport { useDrag } from \"react-use-gesture\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useGesture } from \"react-use-gesture\";\r\n//방문자 기록 컴포넌트\r\n\r\nconst HostImg = styled.img`\r\n  max-width: 100px;\r\n  max-height: 150px;\r\n  display: flex;\r\n  position: absolute;\r\n  transform: translate(-40%, -50%);\r\n  top: 40%;\r\n  left: 50%;\r\n`;\r\n\r\nconst BottomWrap = styled.div`\r\n  height: 60%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst Bottom = styled.div`\r\n  border-radius: 40px;\r\n  border: 2px solid var(--unnamed, #12151c);\r\n  background: #fff;\r\n  width: 90%;\r\n  height: 90%;\r\n`;\r\n\r\nexport function TestBottom() {\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const [imagePosition, setImagePosition] = useState({ x: 0, y: 0 });\r\n  const [isImageVisible, setIsImageVisible] = useState(false);\r\n\r\n  const [hostImageUrl, setHostImageUrl] = useState(null);\r\n\r\n  const isImageFixed = useSelector((state) => state.app.isImageFixed);\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3001/imgUrl/1\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.url) {\r\n          setHostImageUrl(data.url);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"오류 발생\", error);\r\n      });\r\n  }, []);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleFetchImageAndImageClick = async (event) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:3001/imgUrl/2\");\r\n      const data = await response.json();\r\n      setImageUrl(data.url);\r\n      setImagePosition({ x: event.clientX, y: event.clientY });\r\n      console.log(imagePosition);\r\n      setIsImageVisible(true);\r\n      dispatch(setIsImageFixed(false)); // 이미지 클릭 시, 스티커 고정 상태를 해제\r\n    } catch (error) {\r\n      console.error(\"이미지 URL 가져오기 오류:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isImageFixed) {\r\n      fetch(\"http://localhost:3001/imgUrl\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ imgposition: imagePosition }),\r\n      })\r\n        .then((response) => response.json())\r\n\r\n        .catch((error) => {\r\n          console.error(\"오류 발생\", error);\r\n        });\r\n    }\r\n  }, [isImageFixed]);\r\n\r\n  return (\r\n    <BottomWrap>\r\n      <Bottom>\r\n        {/* 클릭 이벤트 리스너 */}\r\n        {!isImageFixed && (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"85%\",\r\n              height: \"85%\",\r\n            }}\r\n            onClick={handleFetchImageAndImageClick}\r\n          ></div>\r\n        )}\r\n        <HostImg src={hostImageUrl} />\r\n        {/* 이미지가 보이는 경우 */}\r\n        {isImageVisible && (\r\n          <img\r\n            src={imageUrl}\r\n            style={{\r\n              maxWidth: \"100px\",\r\n              position: \"absolute\",\r\n              top: imagePosition.y,\r\n              left: imagePosition.x,\r\n              zIndex: 9999,\r\n            }}\r\n            alt=\"Image\"\r\n          />\r\n        )}\r\n      </Bottom>\r\n    </BottomWrap>\r\n  );\r\n}\r\n\r\nexport default TestBottom;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}