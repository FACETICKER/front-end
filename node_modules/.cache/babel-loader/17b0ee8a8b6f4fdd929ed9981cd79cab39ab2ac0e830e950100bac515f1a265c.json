{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\imzza\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\Faceticker\\\\Total2\\\\front-end\\\\src\\\\QnA\\\\guest_input\\\\Guest_Btn.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styles2 from \"./Guest_Btn.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport questionSlice from \"../Slice/questionSlice\";\nimport ID_answerSlice from \"../Slice/ID_AnswerSlice\";\nimport AnswerSlice from \"../Slice/AnswerSlice\";\nimport Buttons_idSlice from \"../Slice/Buttons_idSlice\";\nimport ChoiceSlice from \"../Slice/ChoiceSlice\";\nimport Answer_button from \"../host_input/Answer_button\";\nimport Choice_Modal from \"../host_input/Choice_Modal\";\nimport ModalpositionSlice from \"../Slice/ModalpositionSlice\";\nimport Basicquestionbtn from \"../../img/QnA_img//basicquestionbtn.png\";\nimport PageSlice from \"../Slice/PageSlice\";\nimport New_mark from \"../../img/QnA_img/new_mark.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Guest_Btn(props) {\n  _s();\n  const dispatch = useDispatch();\n  const ans = useSelector(state => state.answer);\n  const ques = useSelector(state => {\n    return state.question;\n  });\n  const view = useSelector(state => {\n    return state.switch_question;\n  });\n  const choice = useSelector(state => {\n    return state.choice;\n  });\n  const onclick = e => {\n    dispatch(Buttons_idSlice.actions.change());\n    dispatch(ID_answerSlice.actions.up(props.id)); // answer id가 현재 질문 id와 같게 설정 (원래 e.target.id)\n    dispatch(ChoiceSlice.actions.reset()); // choice를 off\n    dispatch(questionSlice.actions.edit(props.id)); // question 버튼의 clicked가 on/off 바뀌게 설정\n\n    const buttonRect = e.target.getBoundingClientRect();\n    const modalTop = buttonRect.bottom + 10;\n    const modalLeft = buttonRect.left + buttonRect.width / 2;\n    dispatch(ModalpositionSlice.actions.up({\n      top: modalTop,\n      left: modalLeft\n    }));\n  };\n  const [hasMatchingId, setHasMatchingId] = useState(false); // 질문과 같은 id를 가진 답변이 존재하는지 여부\n  const [filtered, setFiltered] = useState([]); // id가 같은 답변\n\n  useEffect(() => {\n    const count = ques.filter(obj => obj.clicked === true).length;\n    {\n      count > 1 && dispatch(questionSlice.actions.off());\n    } // 2개 이상 버튼 눌릴 경우 다 꺼버림\n    const count2 = ans.filter(obj => obj.clicked === true).length;\n    {\n      count > 0 && count2 > 0 && dispatch(questionSlice.actions.off());\n    } // 질문과 답변 모두 클릭(결국 2개 이상 버튼 눌리는 경우) 다 끔\n    {\n      count > 0 && count2 > 0 && dispatch(AnswerSlice.actions.off());\n    }\n    {\n      count2 > 1 && dispatch(AnswerSlice.actions.off());\n    }\n  }, []);\n  useEffect(() => {\n    const matchingIds = ans.filter(item => item.id === props.id);\n    setHasMatchingId(matchingIds.length > 0);\n    setFiltered(matchingIds);\n  }, [ans, props.id]);\n  const maxId = ques.reduce((max, item) => {\n    return item.id > max ? item.id : max;\n  }, 0);\n  const Basic_Choice = () => {\n    dispatch(PageSlice.actions.basic());\n  };\n  const open = ques.filter(obj => obj.id === props.id).map(obj => obj.open)[0];\n\n  // view가 true면 답변 내역, false면 미답변 내역\n\n  const classNames = [styles2.buttonArray,\n  // 기본 스타일 (container)\n  open ? \"\" : styles2.lock].join(\" \");\n\n  // 답변 내역은 전부 보여주고, 미답변 내역에서는 답변이 있으면 div 숨기는 스타일 적용\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles2.buttonbackground} ${!view && hasMatchingId ? styles2.hidden : \"\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classNames,\n        id: props.id,\n        type: props.type,\n        \"data-open\": props.open,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles2.buttontext,\n          children: open && props.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), hasMatchingId && filtered.map(item => /*#__PURE__*/_jsxDEV(Answer_button, {\n      id: item.id,\n      type: item.type,\n      open: item.open,\n      text: item.text,\n      clicked: item.clicked\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(Guest_Btn, \"sFrFzgeUI7Ct//O3+8qUAfjan0Y=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c = Guest_Btn;\nexport default Guest_Btn;\nvar _c;\n$RefreshReg$(_c, \"Guest_Btn\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styles2","useDispatch","useSelector","questionSlice","ID_answerSlice","AnswerSlice","Buttons_idSlice","ChoiceSlice","Answer_button","Choice_Modal","ModalpositionSlice","Basicquestionbtn","PageSlice","New_mark","jsxDEV","_jsxDEV","Guest_Btn","props","_s","dispatch","ans","state","answer","ques","question","view","switch_question","choice","onclick","e","actions","change","up","id","reset","edit","buttonRect","target","getBoundingClientRect","modalTop","bottom","modalLeft","left","width","top","hasMatchingId","setHasMatchingId","filtered","setFiltered","count","filter","obj","clicked","length","off","count2","matchingIds","item","maxId","reduce","max","Basic_Choice","basic","open","map","classNames","buttonArray","lock","join","children","className","buttonbackground","hidden","type","buttontext","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/imzza/OneDrive/바탕 화면/Faceticker/Total2/front-end/src/QnA/guest_input/Guest_Btn.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport styles2 from \"./Guest_Btn.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport questionSlice from \"../Slice/questionSlice\";\r\nimport ID_answerSlice from \"../Slice/ID_AnswerSlice\";\r\nimport AnswerSlice from \"../Slice/AnswerSlice\";\r\nimport Buttons_idSlice from \"../Slice/Buttons_idSlice\";\r\nimport ChoiceSlice from \"../Slice/ChoiceSlice\";\r\nimport Answer_button from \"../host_input/Answer_button\";\r\nimport Choice_Modal from \"../host_input/Choice_Modal\";\r\nimport ModalpositionSlice from \"../Slice/ModalpositionSlice\";\r\nimport Basicquestionbtn from \"../../img/QnA_img//basicquestionbtn.png\";\r\nimport PageSlice from \"../Slice/PageSlice\";\r\nimport New_mark from \"../../img/QnA_img/new_mark.png\";\r\n\r\nfunction Guest_Btn(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const ans = useSelector((state) => state.answer);\r\n\r\n  const ques = useSelector((state) => {\r\n    return state.question;\r\n  });\r\n\r\n  const view = useSelector((state) => {\r\n    return state.switch_question;\r\n  });\r\n\r\n  const choice = useSelector((state) => {\r\n    return state.choice;\r\n  });\r\n\r\n  const onclick = (e) => {\r\n    dispatch(Buttons_idSlice.actions.change());\r\n    dispatch(ID_answerSlice.actions.up(props.id)); // answer id가 현재 질문 id와 같게 설정 (원래 e.target.id)\r\n    dispatch(ChoiceSlice.actions.reset()); // choice를 off\r\n    dispatch(questionSlice.actions.edit(props.id)); // question 버튼의 clicked가 on/off 바뀌게 설정\r\n\r\n    const buttonRect = e.target.getBoundingClientRect();\r\n    const modalTop = buttonRect.bottom + 10;\r\n    const modalLeft = buttonRect.left + buttonRect.width / 2;\r\n    dispatch(ModalpositionSlice.actions.up({ top: modalTop, left: modalLeft }));\r\n  };\r\n\r\n  const [hasMatchingId, setHasMatchingId] = useState(false); // 질문과 같은 id를 가진 답변이 존재하는지 여부\r\n  const [filtered, setFiltered] = useState([]); // id가 같은 답변\r\n\r\n  useEffect(() => {\r\n    const count = ques.filter((obj) => obj.clicked === true).length;\r\n    {\r\n      count > 1 && dispatch(questionSlice.actions.off());\r\n    } // 2개 이상 버튼 눌릴 경우 다 꺼버림\r\n    const count2 = ans.filter((obj) => obj.clicked === true).length;\r\n    {\r\n      count > 0 && count2 > 0 && dispatch(questionSlice.actions.off());\r\n    } // 질문과 답변 모두 클릭(결국 2개 이상 버튼 눌리는 경우) 다 끔\r\n    {\r\n      count > 0 && count2 > 0 && dispatch(AnswerSlice.actions.off());\r\n    }\r\n    {\r\n      count2 > 1 && dispatch(AnswerSlice.actions.off());\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const matchingIds = ans.filter((item) => item.id === props.id);\r\n    setHasMatchingId(matchingIds.length > 0);\r\n    setFiltered(matchingIds);\r\n  }, [ans, props.id]);\r\n\r\n  const maxId = ques.reduce((max, item) => {\r\n    return item.id > max ? item.id : max;\r\n  }, 0);\r\n\r\n  const Basic_Choice = () => {\r\n    dispatch(PageSlice.actions.basic());\r\n  };\r\n\r\n  const open = ques\r\n    .filter((obj) => obj.id === props.id)\r\n    .map((obj) => obj.open)[0];\r\n\r\n  // view가 true면 답변 내역, false면 미답변 내역\r\n\r\n  const classNames = [\r\n    styles2.buttonArray, // 기본 스타일 (container)\r\n    open ? \"\" : styles2.lock,\r\n  ].join(\" \");\r\n\r\n  // 답변 내역은 전부 보여주고, 미답변 내역에서는 답변이 있으면 div 숨기는 스타일 적용\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className={`${styles2.buttonbackground} ${\r\n          !view && hasMatchingId ? styles2.hidden : \"\"\r\n        }`}\r\n      >\r\n        <button\r\n          className={classNames}\r\n          id={props.id}\r\n          type={props.type}\r\n          data-open={props.open}\r\n        >\r\n          <span className={styles2.buttontext}>{open && props.text}</span>\r\n        </button>\r\n      </div>\r\n      {hasMatchingId &&\r\n        filtered.map((item) => (\r\n          <Answer_button\r\n            key={item.id}\r\n            id={item.id}\r\n            type={item.type}\r\n            open={item.open}\r\n            text={item.text}\r\n            clicked={item.clicked}\r\n          ></Answer_button>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Guest_Btn;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,OAAO,MAAM,wBAAwB;AAC5C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,aAAa,MAAM,wBAAwB;AAClD,OAAOC,cAAc,MAAM,yBAAyB;AACpD,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,eAAe,MAAM,0BAA0B;AACtD,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,kBAAkB,MAAM,6BAA6B;AAC5D,OAAOC,gBAAgB,MAAM,yCAAyC;AACtE,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,QAAQ,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAE9B,MAAMmB,GAAG,GAAGlB,WAAW,CAAEmB,KAAK,IAAKA,KAAK,CAACC,MAAM,CAAC;EAEhD,MAAMC,IAAI,GAAGrB,WAAW,CAAEmB,KAAK,IAAK;IAClC,OAAOA,KAAK,CAACG,QAAQ;EACvB,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAGvB,WAAW,CAAEmB,KAAK,IAAK;IAClC,OAAOA,KAAK,CAACK,eAAe;EAC9B,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAGzB,WAAW,CAAEmB,KAAK,IAAK;IACpC,OAAOA,KAAK,CAACM,MAAM;EACrB,CAAC,CAAC;EAEF,MAAMC,OAAO,GAAIC,CAAC,IAAK;IACrBV,QAAQ,CAACb,eAAe,CAACwB,OAAO,CAACC,MAAM,CAAC,CAAC,CAAC;IAC1CZ,QAAQ,CAACf,cAAc,CAAC0B,OAAO,CAACE,EAAE,CAACf,KAAK,CAACgB,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/Cd,QAAQ,CAACZ,WAAW,CAACuB,OAAO,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACvCf,QAAQ,CAAChB,aAAa,CAAC2B,OAAO,CAACK,IAAI,CAAClB,KAAK,CAACgB,EAAE,CAAC,CAAC,CAAC,CAAC;;IAEhD,MAAMG,UAAU,GAAGP,CAAC,CAACQ,MAAM,CAACC,qBAAqB,CAAC,CAAC;IACnD,MAAMC,QAAQ,GAAGH,UAAU,CAACI,MAAM,GAAG,EAAE;IACvC,MAAMC,SAAS,GAAGL,UAAU,CAACM,IAAI,GAAGN,UAAU,CAACO,KAAK,GAAG,CAAC;IACxDxB,QAAQ,CAACT,kBAAkB,CAACoB,OAAO,CAACE,EAAE,CAAC;MAAEY,GAAG,EAAEL,QAAQ;MAAEG,IAAI,EAAED;IAAU,CAAC,CAAC,CAAC;EAC7E,CAAC;EAED,MAAM,CAACI,aAAa,EAAEC,gBAAgB,CAAC,GAAGjD,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACkD,QAAQ,EAAEC,WAAW,CAAC,GAAGnD,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMmD,KAAK,GAAG1B,IAAI,CAAC2B,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACC,OAAO,KAAK,IAAI,CAAC,CAACC,MAAM;IAC/D;MACEJ,KAAK,GAAG,CAAC,IAAI9B,QAAQ,CAAChB,aAAa,CAAC2B,OAAO,CAACwB,GAAG,CAAC,CAAC,CAAC;IACpD,CAAC,CAAC;IACF,MAAMC,MAAM,GAAGnC,GAAG,CAAC8B,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACC,OAAO,KAAK,IAAI,CAAC,CAACC,MAAM;IAC/D;MACEJ,KAAK,GAAG,CAAC,IAAIM,MAAM,GAAG,CAAC,IAAIpC,QAAQ,CAAChB,aAAa,CAAC2B,OAAO,CAACwB,GAAG,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC;IACF;MACEL,KAAK,GAAG,CAAC,IAAIM,MAAM,GAAG,CAAC,IAAIpC,QAAQ,CAACd,WAAW,CAACyB,OAAO,CAACwB,GAAG,CAAC,CAAC,CAAC;IAChE;IACA;MACEC,MAAM,GAAG,CAAC,IAAIpC,QAAQ,CAACd,WAAW,CAACyB,OAAO,CAACwB,GAAG,CAAC,CAAC,CAAC;IACnD;EACF,CAAC,EAAE,EAAE,CAAC;EAENxD,SAAS,CAAC,MAAM;IACd,MAAM0D,WAAW,GAAGpC,GAAG,CAAC8B,MAAM,CAAEO,IAAI,IAAKA,IAAI,CAACxB,EAAE,KAAKhB,KAAK,CAACgB,EAAE,CAAC;IAC9Da,gBAAgB,CAACU,WAAW,CAACH,MAAM,GAAG,CAAC,CAAC;IACxCL,WAAW,CAACQ,WAAW,CAAC;EAC1B,CAAC,EAAE,CAACpC,GAAG,EAAEH,KAAK,CAACgB,EAAE,CAAC,CAAC;EAEnB,MAAMyB,KAAK,GAAGnC,IAAI,CAACoC,MAAM,CAAC,CAACC,GAAG,EAAEH,IAAI,KAAK;IACvC,OAAOA,IAAI,CAACxB,EAAE,GAAG2B,GAAG,GAAGH,IAAI,CAACxB,EAAE,GAAG2B,GAAG;EACtC,CAAC,EAAE,CAAC,CAAC;EAEL,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB1C,QAAQ,CAACP,SAAS,CAACkB,OAAO,CAACgC,KAAK,CAAC,CAAC,CAAC;EACrC,CAAC;EAED,MAAMC,IAAI,GAAGxC,IAAI,CACd2B,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAAClB,EAAE,KAAKhB,KAAK,CAACgB,EAAE,CAAC,CACpC+B,GAAG,CAAEb,GAAG,IAAKA,GAAG,CAACY,IAAI,CAAC,CAAC,CAAC,CAAC;;EAE5B;;EAEA,MAAME,UAAU,GAAG,CACjBjE,OAAO,CAACkE,WAAW;EAAE;EACrBH,IAAI,GAAG,EAAE,GAAG/D,OAAO,CAACmE,IAAI,CACzB,CAACC,IAAI,CAAC,GAAG,CAAC;;EAEX;;EAEA,oBACErD,OAAA;IAAAsD,QAAA,gBACEtD,OAAA;MACEuD,SAAS,EAAG,GAAEtE,OAAO,CAACuE,gBAAiB,IACrC,CAAC9C,IAAI,IAAIoB,aAAa,GAAG7C,OAAO,CAACwE,MAAM,GAAG,EAC3C,EAAE;MAAAH,QAAA,eAEHtD,OAAA;QACEuD,SAAS,EAAEL,UAAW;QACtBhC,EAAE,EAAEhB,KAAK,CAACgB,EAAG;QACbwC,IAAI,EAAExD,KAAK,CAACwD,IAAK;QACjB,aAAWxD,KAAK,CAAC8C,IAAK;QAAAM,QAAA,eAEtBtD,OAAA;UAAMuD,SAAS,EAAEtE,OAAO,CAAC0E,UAAW;UAAAL,QAAA,EAAEN,IAAI,IAAI9C,KAAK,CAAC0D;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EACLlC,aAAa,IACZE,QAAQ,CAACiB,GAAG,CAAEP,IAAI,iBAChB1C,OAAA,CAACP,aAAa;MAEZyB,EAAE,EAAEwB,IAAI,CAACxB,EAAG;MACZwC,IAAI,EAAEhB,IAAI,CAACgB,IAAK;MAChBV,IAAI,EAAEN,IAAI,CAACM,IAAK;MAChBY,IAAI,EAAElB,IAAI,CAACkB,IAAK;MAChBvB,OAAO,EAAEK,IAAI,CAACL;IAAQ,GALjBK,IAAI,CAACxB,EAAE;MAAA2C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAME,CACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAAC7D,EAAA,CAzGQF,SAAS;EAAA,QACCf,WAAW,EAEhBC,WAAW,EAEVA,WAAW,EAIXA,WAAW,EAITA,WAAW;AAAA;AAAA8E,EAAA,GAbnBhE,SAAS;AA2GlB,eAAeA,SAAS;AAAC,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}