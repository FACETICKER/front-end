{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\front-end-total\\\\src\\\\QnA\\\\delete_page\\\\Del_btn.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styles from './Del.module.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport New_mark from '../image/new_mark.png';\nimport Del_ansBtn from './Del_ansBtn';\nimport Check from '../../img/QnA_img/ok_check.png';\nimport NoneCheck from '../../img/QnA_img/none_check.png';\nimport questionSlice from '../Slice/questionSlice';\nimport AnswerSlice from '../Slice/AnswerSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Del_btn(props) {\n  _s();\n  const dispatch = useDispatch();\n  const ans = useSelector(state => {\n    return state.answer;\n  });\n  const ques = useSelector(state => {\n    return state.question;\n  });\n  const [hasMatchingId, setHasMatchingId] = useState(false); // 질문과 같은 id를 가진 답변이 존재하는지 여부\n  const [filtered, setFiltered] = useState([]); // id가 같은 답변\n\n  useEffect(() => {\n    const matchingIds = ans.filter(item => item.id === props.id);\n    setHasMatchingId(matchingIds.length > 0);\n    setFiltered(matchingIds);\n  }, [ans, props.id]);\n  const type = ques.filter(obj => obj.id === props.id).map(obj => obj.type)[0];\n  const click = ques.filter(obj => obj.id === props.id).map(obj => obj.clicked)[0];\n  const classNames = [styles.buttonArray,\n  // 기본 스타일 (container)\n  type === 'basic_question' ? styles.basic : '' // 기본 질문인가요? \n  ].join(' ');\n  const onclick = () => {\n    dispatch(questionSlice.actions.edit(props.id)); // 선택 여부 변경\n    const ques_true = ques.filter(obj => obj.id === props.id).map(obj => obj.clicked)[0];\n    const ans_true = ans.filter(obj => obj.id === props.id).map(obj => obj.clicked)[0]; // 질문 클릭 시 만약 답변이 선택 안된 상태면 선택되게\n    if (!ques_true && !ans_true) {\n      dispatch(AnswerSlice.actions.edit(props.id));\n    }\n  };\n  const scrollRef = useRef();\n  useEffect(() => {\n    scrollRef.current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'end',\n      inline: 'nearest'\n    });\n  }, []); // 첫 렌더링 시 끝까지 아래로 스크롤\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttonbackground,\n      onClick: onclick,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${click ? Check : NoneCheck}`,\n        className: styles.check_img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classNames,\n        id: props.id,\n        type: props.type,\n        \"data-open\": props.open,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.buttontext,\n          children: props.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: New_mark,\n          className: `${styles.new} ${hasMatchingId || type === 'basic_question' ? styles.hidden : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), hasMatchingId && filtered.map(item => /*#__PURE__*/_jsxDEV(Del_ansBtn, {\n      id: item.id,\n      type: item.type,\n      open: item.open,\n      text: item.text,\n      clicked: item.clicked\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: scrollRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(Del_btn, \"Zc7jCqteu/0Giy6ecJhoMfG979I=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Del_btn;\nexport default Del_btn;\nvar _c;\n$RefreshReg$(_c, \"Del_btn\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styles","useDispatch","useSelector","New_mark","Del_ansBtn","Check","NoneCheck","questionSlice","AnswerSlice","jsxDEV","_jsxDEV","Del_btn","props","_s","dispatch","ans","state","answer","ques","question","hasMatchingId","setHasMatchingId","filtered","setFiltered","matchingIds","filter","item","id","length","type","obj","map","click","clicked","classNames","buttonArray","basic","join","onclick","actions","edit","ques_true","ans_true","scrollRef","current","scrollIntoView","behavior","block","inline","children","className","buttonbackground","onClick","src","check_img","fileName","_jsxFileName","lineNumber","columnNumber","open","buttontext","text","new","hidden","ref","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/front-end-total/src/QnA/delete_page/Del_btn.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport styles from './Del.module.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport New_mark from '../image/new_mark.png';\r\nimport Del_ansBtn from './Del_ansBtn';\r\nimport Check from '../../img/QnA_img/ok_check.png';\r\nimport NoneCheck from '../../img/QnA_img/none_check.png';\r\nimport questionSlice from '../Slice/questionSlice';\r\nimport AnswerSlice from '../Slice/AnswerSlice';\r\n\r\nfunction Del_btn(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const ans = useSelector(state => {\r\n        return state.answer;\r\n    });\r\n\r\n    const ques = useSelector(state=>{\r\n        return state.question;\r\n    });\r\n\r\n    const [hasMatchingId, setHasMatchingId] = useState(false); // 질문과 같은 id를 가진 답변이 존재하는지 여부\r\n    const [filtered, setFiltered] = useState([]);  // id가 같은 답변\r\n\r\n    useEffect(() => {\r\n        const matchingIds = ans.filter(item => item.id === props.id);   \r\n        setHasMatchingId(matchingIds.length > 0);\r\n        setFiltered(matchingIds);\r\n    }, [ans, props.id]);\r\n\r\n    const type = ques.filter(obj => obj.id === props.id).map(obj => obj.type)[0];\r\n\r\n    const click = ques.filter(obj => obj.id === props.id).map(obj => obj.clicked)[0];\r\n\r\n    const classNames = [\r\n        styles.buttonArray, // 기본 스타일 (container)\r\n        type === 'basic_question' ? styles.basic : '', // 기본 질문인가요? \r\n    ].join(' ');\r\n\r\n    const onclick = () => {\r\n        dispatch(questionSlice.actions.edit(props.id)); // 선택 여부 변경\r\n        const ques_true = ques.filter(obj => obj.id === props.id).map(obj => obj.clicked)[0];\r\n        const ans_true = ans.filter(obj => obj.id === props.id).map(obj => obj.clicked)[0]; // 질문 클릭 시 만약 답변이 선택 안된 상태면 선택되게\r\n        if (!ques_true && !ans_true) {\r\n            dispatch(AnswerSlice.actions.edit(props.id));\r\n        }\r\n    }\r\n\r\n    const scrollRef = useRef();\r\n\r\n    useEffect(() => {\r\n        scrollRef.current.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'nearest' });\r\n    }, []); // 첫 렌더링 시 끝까지 아래로 스크롤\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.buttonbackground} onClick={onclick}>\r\n                <img src={`${click ? Check : NoneCheck}`} className={styles.check_img}></img>\r\n                <button className={classNames} id={props.id} type={props.type} data-open={props.open}>\r\n                    <span className={styles.buttontext}>{props.text}</span>\r\n                    <img src={New_mark} className={`${styles.new} ${hasMatchingId || type === 'basic_question' ? styles.hidden : ''}`}></img>\r\n                </button>\r\n            </div>\r\n            {hasMatchingId && (\r\n                filtered.map(item => (\r\n                    <Del_ansBtn key={item.id} id={item.id} type={item.type} open={item.open} text={item.text} clicked={item.clicked}></Del_ansBtn>\r\n                ))\r\n            )}\r\n            <div ref={scrollRef}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Del_btn\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}