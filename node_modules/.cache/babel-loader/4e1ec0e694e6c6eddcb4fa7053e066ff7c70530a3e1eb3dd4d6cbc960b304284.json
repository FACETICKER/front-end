{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\total2\\\\src\\\\QnA\\\\guest_input\\\\Quesinput.js\",\n  _s = $RefreshSig$();\nimport styles2 from './Quesinput.module.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport questionSlice from '../Slice/questionSlice';\nimport IDSlice from '../Slice/IDSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quesinput() {\n  _s();\n  const dispatch = useDispatch();\n  const ID = useSelector(state => {\n    return state.idcounter.value;\n  });\n  const onsubmit = event => {\n    event.preventDefault();\n    if (question === \"\") {\n      return;\n    }\n    dispatch(IDSlice.actions.up(1));\n    dispatch(questionSlice.actions.up({\n      text: question,\n      id: ID,\n      type: \"question\",\n      open: true,\n      clicked: false\n    }));\n    setquestion(\"\");\n  };\n  const [question, setquestion] = useState(\"\");\n  const inputing = event => setquestion(event.target.value);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onsubmit,\n    className: styles2.chat,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: question,\n      onChange: inputing,\n      placeholder: \"\\uC5EC\\uAE30\\uC5D0 \\uC9C8\\uBB38\\uD558\\uC138\\uC694\",\n      type: \"text\",\n      maxLength: 100,\n      className: styles2.answer_input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles2.answer_button\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Quesinput, \"d7CxKzwVa0B5pKNTPYYn0lPNtlo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Quesinput;\n;\nexport default Quesinput;\nvar _c;\n$RefreshReg$(_c, \"Quesinput\");","map":{"version":3,"names":["styles2","React","useState","useDispatch","useSelector","questionSlice","IDSlice","jsxDEV","_jsxDEV","Quesinput","_s","dispatch","ID","state","idcounter","value","onsubmit","event","preventDefault","question","actions","up","text","id","type","open","clicked","setquestion","inputing","target","onSubmit","className","chat","children","onChange","placeholder","maxLength","answer_input","fileName","_jsxFileName","lineNumber","columnNumber","answer_button","_c","$RefreshReg$"],"sources":["C:/react/total2/src/QnA/guest_input/Quesinput.js"],"sourcesContent":["import styles2 from './Quesinput.module.css';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport questionSlice from '../Slice/questionSlice';\r\nimport IDSlice from '../Slice/IDSlice';\r\n\r\nfunction Quesinput() {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const ID = useSelector(state=>{\r\n        return state.idcounter.value;\r\n    });\r\n\r\n    const onsubmit = (event) => {\r\n        event.preventDefault();\r\n        if (question === \"\") {\r\n            return;\r\n        }\r\n        dispatch(IDSlice.actions.up(1));\r\n        dispatch(questionSlice.actions.up({text: question, id: ID, type: \"question\", open: true, clicked: false}));\r\n        setquestion(\"\");\r\n    }\r\n    \r\n    const [question, setquestion] = useState(\"\");\r\n\r\n    const inputing = (event) => setquestion(event.target.value);\r\n\r\n    return (\r\n        <form onSubmit={onsubmit} className={styles2.chat}>\r\n            <input value={question} onChange={inputing} placeholder='여기에 질문하세요' type='text' maxLength={100} className={styles2.answer_input}></input>\r\n            <button className={styles2.answer_button}></button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Quesinput;"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,wBAAwB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,OAAOC,aAAa,MAAM,wBAAwB;AAClD,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAEjB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAMS,EAAE,GAAGR,WAAW,CAACS,KAAK,IAAE;IAC1B,OAAOA,KAAK,CAACC,SAAS,CAACC,KAAK;EAChC,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAIC,KAAK,IAAK;IACxBA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAIC,QAAQ,KAAK,EAAE,EAAE;MACjB;IACJ;IACAR,QAAQ,CAACL,OAAO,CAACc,OAAO,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/BV,QAAQ,CAACN,aAAa,CAACe,OAAO,CAACC,EAAE,CAAC;MAACC,IAAI,EAAEH,QAAQ;MAAEI,EAAE,EAAEX,EAAE;MAAEY,IAAI,EAAE,UAAU;MAAEC,IAAI,EAAE,IAAI;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC,CAAC;IAC1GC,WAAW,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAM,CAACR,QAAQ,EAAEQ,WAAW,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM0B,QAAQ,GAAIX,KAAK,IAAKU,WAAW,CAACV,KAAK,CAACY,MAAM,CAACd,KAAK,CAAC;EAE3D,oBACIP,OAAA;IAAMsB,QAAQ,EAAEd,QAAS;IAACe,SAAS,EAAE/B,OAAO,CAACgC,IAAK;IAAAC,QAAA,gBAC9CzB,OAAA;MAAOO,KAAK,EAAEI,QAAS;MAACe,QAAQ,EAAEN,QAAS;MAACO,WAAW,EAAC,mDAAW;MAACX,IAAI,EAAC,MAAM;MAACY,SAAS,EAAE,GAAI;MAACL,SAAS,EAAE/B,OAAO,CAACqC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzIjC,OAAA;MAAQuB,SAAS,EAAE/B,OAAO,CAAC0C;IAAc;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEf;AAAC/B,EAAA,CA5BQD,SAAS;EAAA,QAEGN,WAAW,EAEjBC,WAAW;AAAA;AAAAuC,EAAA,GAJjBlC,SAAS;AA4BjB;AAED,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}