{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst questionSlice = createSlice({\n  name: 'questionslice',\n  initialState: [],\n  reducers: {\n    up: (state, action) => {\n      state.push(action.payload); // 질문 추가하기\n    },\n\n    edit: (state, action) => {\n      const idToUpdate = action.payload;\n      const questionToEdit = state.find(question => question.id === Number(idToUpdate));\n      if (questionToEdit) {\n        questionToEdit.clicked = !questionToEdit.clicked; // 클릭 여부 바꾸기\n      }\n    },\n\n    off: (state, action) => {\n      state.forEach(obj => {\n        obj.clicked = false; // 모든 질문 상태 clicked = false로 바꾸기\n      });\n    },\n\n    on: (state, action) => {\n      state.forEach(obj => {\n        obj.clicked = true; // 모든 질문 상태 clicked = true로 바꾸기\n      });\n    },\n\n    remove: (state, action) => {\n      const idToRemove = action.payload;\n      return state.filter(obj => obj.id !== idToRemove); // 해당 id를 가진 질문 지우기\n    },\n\n    openswitch: (state, action) => {\n      const idTochange = action.payload[0];\n      const openTochange = action.payload[1];\n      const questionTochange = state.find(question => question.id === Number(idTochange));\n      questionTochange.open = openTochange;\n    }\n  }\n});\nexport default questionSlice;","map":{"version":3,"names":["createSlice","questionSlice","name","initialState","reducers","up","state","action","push","payload","edit","idToUpdate","questionToEdit","find","question","id","Number","clicked","off","forEach","obj","on","remove","idToRemove","filter","openswitch","idTochange","openTochange","questionTochange","open"],"sources":["C:/Users/imzza/OneDrive/바탕 화면/Faceticker/Total2/front-end/src/QnA/Slice/questionSlice.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst questionSlice = createSlice({\r\n    name:'questionslice',\r\n    initialState:[],\r\n    reducers:{\r\n        up:(state, action)=>{\r\n            state.push(action.payload);  // 질문 추가하기\r\n        },\r\n        edit: (state, action) => {\r\n            const idToUpdate = action.payload;\r\n            const questionToEdit = state.find(question => question.id === Number(idToUpdate));\r\n            if (questionToEdit) {\r\n                questionToEdit.clicked = !questionToEdit.clicked;  // 클릭 여부 바꾸기\r\n            }\r\n        },\r\n        off: (state, action) => {\r\n            state.forEach(obj => {\r\n                obj.clicked = false;  // 모든 질문 상태 clicked = false로 바꾸기\r\n            });\r\n        },\r\n        on: (state, action) => {\r\n            state.forEach(obj => {\r\n                obj.clicked = true;  // 모든 질문 상태 clicked = true로 바꾸기\r\n            });\r\n        },\r\n        remove: (state, action) => {\r\n            const idToRemove = action.payload;\r\n            return state.filter(obj => obj.id !== idToRemove); // 해당 id를 가진 질문 지우기\r\n        },\r\n        openswitch: (state, action) => {\r\n            const idTochange = action.payload[0];\r\n            const openTochange = action.payload[1];\r\n            const questionTochange = state.find(question => question.id === Number(idTochange));\r\n            questionTochange.open = openTochange;\r\n        }  \r\n    }\r\n});\r\nexport default questionSlice;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,aAAa,GAAGD,WAAW,CAAC;EAC9BE,IAAI,EAAC,eAAe;EACpBC,YAAY,EAAC,EAAE;EACfC,QAAQ,EAAC;IACLC,EAAE,EAACA,CAACC,KAAK,EAAEC,MAAM,KAAG;MAChBD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC,CAAC,CAAE;IACjC,CAAC;;IACDC,IAAI,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACrB,MAAMI,UAAU,GAAGJ,MAAM,CAACE,OAAO;MACjC,MAAMG,cAAc,GAAGN,KAAK,CAACO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,EAAE,KAAKC,MAAM,CAACL,UAAU,CAAC,CAAC;MACjF,IAAIC,cAAc,EAAE;QAChBA,cAAc,CAACK,OAAO,GAAG,CAACL,cAAc,CAACK,OAAO,CAAC,CAAE;MACvD;IACJ,CAAC;;IACDC,GAAG,EAAEA,CAACZ,KAAK,EAAEC,MAAM,KAAK;MACpBD,KAAK,CAACa,OAAO,CAACC,GAAG,IAAI;QACjBA,GAAG,CAACH,OAAO,GAAG,KAAK,CAAC,CAAE;MAC1B,CAAC,CAAC;IACN,CAAC;;IACDI,EAAE,EAAEA,CAACf,KAAK,EAAEC,MAAM,KAAK;MACnBD,KAAK,CAACa,OAAO,CAACC,GAAG,IAAI;QACjBA,GAAG,CAACH,OAAO,GAAG,IAAI,CAAC,CAAE;MACzB,CAAC,CAAC;IACN,CAAC;;IACDK,MAAM,EAAEA,CAAChB,KAAK,EAAEC,MAAM,KAAK;MACvB,MAAMgB,UAAU,GAAGhB,MAAM,CAACE,OAAO;MACjC,OAAOH,KAAK,CAACkB,MAAM,CAACJ,GAAG,IAAIA,GAAG,CAACL,EAAE,KAAKQ,UAAU,CAAC,CAAC,CAAC;IACvD,CAAC;;IACDE,UAAU,EAAEA,CAACnB,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAMmB,UAAU,GAAGnB,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC;MACpC,MAAMkB,YAAY,GAAGpB,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC;MACtC,MAAMmB,gBAAgB,GAAGtB,KAAK,CAACO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,EAAE,KAAKC,MAAM,CAACU,UAAU,CAAC,CAAC;MACnFE,gBAAgB,CAACC,IAAI,GAAGF,YAAY;IACxC;EACJ;AACJ,CAAC,CAAC;AACF,eAAe1B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}