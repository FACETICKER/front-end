{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\imzza\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\Faceticker\\\\Total2\\\\front-end\\\\src\\\\QnA\\\\host_input\\\\Ansinput.js\",\n  _s = $RefreshSig$();\nimport styles2 from \"../style/QnApage_2.module.css\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AnswerSlice from \"../Slice/AnswerSlice\";\nimport questionSlice from \"../Slice/questionSlice\";\nimport ChoiceSlice from \"../Slice/ChoiceSlice\";\nimport Checkbox from \"../../img/QnA_img/Checkbox.png\";\nimport Checked from \"../../img/QnA_img/Checked.png\";\nimport OpencheckSlice from \"../Slice/OpencheckSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Ansinput() {\n  _s();\n  const dispatch = useDispatch();\n  const [answer, setanswer] = useState(\"\");\n  const open = useSelector(state => {\n    return state.opencheck;\n  });\n  const ID = useSelector(state => {\n    return state.id_answer.value;\n  });\n  const onsubmit = event => {\n    event.preventDefault();\n    if (answer === \"\") {\n      return;\n    }\n    dispatch(AnswerSlice.actions.up({\n      text: answer,\n      id: ID,\n      type: \"answer\",\n      open: open,\n      clicked: false\n    })); // 답변 생성\n    setanswer(\"\"); // 입력 칸 초기화\n    dispatch(questionSlice.actions.edit(ID)); // 질문 클릭 안된 상태로 돌리기\n    dispatch(questionSlice.actions.openswitch([ID, open])); // 답변, 질문에 공개 여부 설정\n    dispatch(AnswerSlice.actions.openswitch([ID, open]));\n    dispatch(ChoiceSlice.actions.change()); // 입력 창 끄기\n  };\n\n  const onchange = event => setanswer(event.target.value); /* 답변 입력시 answer에 저장 */\n\n  const openswitch = () => {\n    dispatch(OpencheckSlice.actions.change());\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onsubmit,\n    className: styles2.chat,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles2.checkboxzone,\n      onClick: openswitch,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${open ? Checkbox : Checked}`,\n        className: styles2.checkbox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `${open ? \"\" : styles2.clickedwrite}`,\n        children: \"\\uBE44\\uACF5\\uAC1C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: answer,\n      onChange: onchange,\n      placeholder: \"\\uC5EC\\uAE30\\uC5D0 \\uB2F5\\uBCC0\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n      type: \"text\",\n      className: styles2.answer_input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles2.answer_button\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Ansinput, \"LUbEpSkRUWHGVco2wmYcTmdJrJ4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Ansinput;\nexport default Ansinput;\nvar _c;\n$RefreshReg$(_c, \"Ansinput\");","map":{"version":3,"names":["styles2","React","useState","useEffect","useDispatch","useSelector","AnswerSlice","questionSlice","ChoiceSlice","Checkbox","Checked","OpencheckSlice","jsxDEV","_jsxDEV","Ansinput","_s","dispatch","answer","setanswer","open","state","opencheck","ID","id_answer","value","onsubmit","event","preventDefault","actions","up","text","id","type","clicked","edit","openswitch","change","onchange","target","onSubmit","className","chat","children","checkboxzone","onClick","src","checkbox","fileName","_jsxFileName","lineNumber","columnNumber","clickedwrite","onChange","placeholder","answer_input","answer_button","_c","$RefreshReg$"],"sources":["C:/Users/imzza/OneDrive/바탕 화면/Faceticker/Total2/front-end/src/QnA/host_input/Ansinput.js"],"sourcesContent":["import styles2 from \"../style/QnApage_2.module.css\";\r\nimport React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AnswerSlice from \"../Slice/AnswerSlice\";\r\nimport questionSlice from \"../Slice/questionSlice\";\r\nimport ChoiceSlice from \"../Slice/ChoiceSlice\";\r\nimport Checkbox from \"../../img/QnA_img/Checkbox.png\";\r\nimport Checked from \"../../img/QnA_img/Checked.png\";\r\nimport OpencheckSlice from \"../Slice/OpencheckSlice\";\r\n\r\nfunction Ansinput() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [answer, setanswer] = useState(\"\");\r\n\r\n  const open = useSelector((state) => {\r\n    return state.opencheck;\r\n  });\r\n\r\n  const ID = useSelector((state) => {\r\n    return state.id_answer.value;\r\n  });\r\n\r\n  const onsubmit = (event) => {\r\n    event.preventDefault();\r\n    if (answer === \"\") {\r\n      return;\r\n    }\r\n    dispatch(\r\n      AnswerSlice.actions.up({\r\n        text: answer,\r\n        id: ID,\r\n        type: \"answer\",\r\n        open: open,\r\n        clicked: false,\r\n      })\r\n    ); // 답변 생성\r\n    setanswer(\"\"); // 입력 칸 초기화\r\n    dispatch(questionSlice.actions.edit(ID)); // 질문 클릭 안된 상태로 돌리기\r\n    dispatch(questionSlice.actions.openswitch([ID, open])); // 답변, 질문에 공개 여부 설정\r\n    dispatch(AnswerSlice.actions.openswitch([ID, open]));\r\n    dispatch(ChoiceSlice.actions.change()); // 입력 창 끄기\r\n  };\r\n\r\n  const onchange = (event) =>\r\n    setanswer(event.target.value); /* 답변 입력시 answer에 저장 */\r\n\r\n  const openswitch = () => {\r\n    dispatch(OpencheckSlice.actions.change());\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onsubmit} className={styles2.chat}>\r\n      <div className={styles2.checkboxzone} onClick={openswitch}>\r\n        <img\r\n          src={`${open ? Checkbox : Checked}`}\r\n          className={styles2.checkbox}\r\n        ></img>\r\n        <p className={`${open ? \"\" : styles2.clickedwrite}`}>비공개</p>\r\n      </div>\r\n      <input\r\n        value={answer}\r\n        onChange={onchange}\r\n        placeholder=\"여기에 답변을 입력하세요\"\r\n        type=\"text\"\r\n        className={styles2.answer_input}\r\n      ></input>\r\n      <button className={styles2.answer_button}></button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Ansinput;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}