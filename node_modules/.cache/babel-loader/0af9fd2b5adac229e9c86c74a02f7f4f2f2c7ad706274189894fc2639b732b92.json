{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst AnswerSlice = createSlice({\n  name: 'answerslice',\n  initialState: [],\n  reducers: {\n    up: (state, action) => {\n      state.push(action.payload);\n    },\n    remove: (state, action) => {\n      const idToRemove = action.payload;\n      return state.filter(obj => obj.id !== idToRemove);\n    },\n    edit: (state, action) => {\n      const idToUpdate = action.payload;\n      const answerToEdit = state.find(answer => answer.id === idToUpdate);\n      if (answerToEdit) {\n        answerToEdit.clicked = !answerToEdit.clicked; // 클릭 여부 바꾸기\n      }\n    },\n\n    off: (state, action) => {\n      state.forEach(obj => {\n        obj.clicked = false; // 모든 질문 상태 clicked = false로 바꾸기\n      });\n    },\n\n    openswitch: (state, action) => {\n      const idTochange = action.payload[0];\n      const openTochange = action.payload[1];\n      const answerTochange = state.find(answer => answer.id === idTochange);\n      answerTochange.open = openTochange;\n    }\n  }\n});\nexport default AnswerSlice;","map":{"version":3,"names":["createSlice","AnswerSlice","name","initialState","reducers","up","state","action","push","payload","remove","idToRemove","filter","obj","id","edit","idToUpdate","answerToEdit","find","answer","clicked","off","forEach","openswitch","idTochange","openTochange","answerTochange","open"],"sources":["C:/react/frontendtotal/src/QnA/Slice/AnswerSlice.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst AnswerSlice = createSlice({\r\n    name:'answerslice',\r\n    initialState:[],\r\n    reducers:{\r\n        up:(state, action)=>{\r\n            state.push(action.payload);\r\n        },\r\n        remove: (state, action) => {\r\n            const idToRemove = action.payload;\r\n            return state.filter(obj => obj.id !== idToRemove);\r\n        },\r\n        edit: (state, action) => {\r\n            const idToUpdate = action.payload;\r\n            const answerToEdit = state.find(answer => answer.id === idToUpdate);\r\n            if (answerToEdit) {\r\n                answerToEdit.clicked = !answerToEdit.clicked;  // 클릭 여부 바꾸기\r\n            }\r\n        },\r\n        off: (state, action) => {\r\n            state.forEach(obj => {\r\n                obj.clicked = false;  // 모든 질문 상태 clicked = false로 바꾸기\r\n            });\r\n        },\r\n        openswitch: (state, action) => {\r\n            const idTochange = action.payload[0];\r\n            const openTochange = action.payload[1];\r\n            const answerTochange = state.find(answer => answer.id === idTochange);\r\n            answerTochange.open = openTochange;\r\n        }\r\n    }\r\n});\r\nexport default AnswerSlice;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,WAAW,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAC,aAAa;EAClBC,YAAY,EAAC,EAAE;EACfC,QAAQ,EAAC;IACLC,EAAE,EAACA,CAACC,KAAK,EAAEC,MAAM,KAAG;MAChBD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC9B,CAAC;IACDC,MAAM,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACvB,MAAMI,UAAU,GAAGJ,MAAM,CAACE,OAAO;MACjC,OAAOH,KAAK,CAACM,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKH,UAAU,CAAC;IACrD,CAAC;IACDI,IAAI,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MACrB,MAAMS,UAAU,GAAGT,MAAM,CAACE,OAAO;MACjC,MAAMQ,YAAY,GAAGX,KAAK,CAACY,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACL,EAAE,KAAKE,UAAU,CAAC;MACnE,IAAIC,YAAY,EAAE;QACdA,YAAY,CAACG,OAAO,GAAG,CAACH,YAAY,CAACG,OAAO,CAAC,CAAE;MACnD;IACJ,CAAC;;IACDC,GAAG,EAAEA,CAACf,KAAK,EAAEC,MAAM,KAAK;MACpBD,KAAK,CAACgB,OAAO,CAACT,GAAG,IAAI;QACjBA,GAAG,CAACO,OAAO,GAAG,KAAK,CAAC,CAAE;MAC1B,CAAC,CAAC;IACN,CAAC;;IACDG,UAAU,EAAEA,CAACjB,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAMiB,UAAU,GAAGjB,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC;MACpC,MAAMgB,YAAY,GAAGlB,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC;MACtC,MAAMiB,cAAc,GAAGpB,KAAK,CAACY,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACL,EAAE,KAAKU,UAAU,CAAC;MACrEE,cAAc,CAACC,IAAI,GAAGF,YAAY;IACtC;EACJ;AACJ,CAAC,CAAC;AACF,eAAexB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}