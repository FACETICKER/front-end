[{"C:\\react\\total2\\src\\index.js":"1","C:\\react\\total2\\src\\App.js":"2","C:\\react\\total2\\src\\store.js":"3","C:\\react\\total2\\src\\page\\StickersHost.js":"4","C:\\react\\total2\\src\\page\\PutPage.js":"5","C:\\react\\total2\\src\\reportWebVitals.js":"6","C:\\react\\total2\\src\\Stickers\\Reposition.js":"7","C:\\react\\total2\\src\\Stickers\\StickerMenu.js":"8","C:\\react\\total2\\src\\Stickers\\ClickSticker.js":"9","C:\\react\\total2\\src\\Stickers\\reducers.js":"10","C:\\react\\total2\\src\\Stickers\\imageSlice.js":"11","C:\\react\\total2\\src\\Stickers\\VisitPut.js":"12","C:\\react\\total2\\src\\Stickers\\Host.js":"13","C:\\react\\total2\\src\\Stickers\\MainText.js":"14","C:\\react\\total2\\src\\Stickers\\TestBottom.js":"15","C:\\react\\total2\\src\\Stickers\\StaticSticker.js":"16","C:\\react\\total2\\src\\Stickers\\RepositionSticker.js":"17","C:\\react\\total2\\src\\components\\Dots.js":"18","C:\\react\\total2\\src\\components\\HostHeader.js":"19"},{"size":535,"mtime":1691597074301,"results":"20","hashOfConfig":"21"},{"size":1361,"mtime":1691672992454,"results":"22","hashOfConfig":"21"},{"size":331,"mtime":1691672992550,"results":"23","hashOfConfig":"21"},{"size":1338,"mtime":1691672992546,"results":"24","hashOfConfig":"21"},{"size":1338,"mtime":1691672992544,"results":"25","hashOfConfig":"21"},{"size":377,"mtime":1691672992548,"results":"26","hashOfConfig":"21"},{"size":4205,"mtime":1691672992464,"results":"27","hashOfConfig":"21"},{"size":7892,"mtime":1691672992468,"results":"28","hashOfConfig":"21"},{"size":9044,"mtime":1691672992460,"results":"29","hashOfConfig":"21"},{"size":358,"mtime":1691672992476,"results":"30","hashOfConfig":"21"},{"size":505,"mtime":1691672992475,"results":"31","hashOfConfig":"21"},{"size":4741,"mtime":1691672992474,"results":"32","hashOfConfig":"21"},{"size":3786,"mtime":1691672992461,"results":"33","hashOfConfig":"21"},{"size":1097,"mtime":1691672992463,"results":"34","hashOfConfig":"21"},{"size":6574,"mtime":1691672992471,"results":"35","hashOfConfig":"21"},{"size":4607,"mtime":1691672992467,"results":"36","hashOfConfig":"21"},{"size":7332,"mtime":1691672992466,"results":"37","hashOfConfig":"21"},{"size":839,"mtime":1691672992480,"results":"38","hashOfConfig":"21"},{"size":4858,"mtime":1691672992481,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1o8vsql",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},"C:\\react\\total2\\src\\index.js",[],[],[],"C:\\react\\total2\\src\\App.js",[],[],"C:\\react\\total2\\src\\store.js",[],[],"C:\\react\\total2\\src\\page\\StickersHost.js",[],[],"C:\\react\\total2\\src\\page\\PutPage.js",[],[],"C:\\react\\total2\\src\\reportWebVitals.js",[],[],"C:\\react\\total2\\src\\Stickers\\Reposition.js",["107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123"],[],"import styled from \"styled-components\";\r\n\r\nimport React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setIsImageFixed } from \"./reducers\";\r\n\r\nimport { TestBottom } from \"./TestBottom\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport StaticSticker from \"./StaticSticker\";\r\nimport MainHeader from \"../components/HostHeader\";\r\nimport { MainText } from \"./MainText\";\r\nimport change from \"../img/stickers_img/change.png\";\r\nimport complete from \"../img/stickers_img/complete.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport RepositionSticker from \"./RepositionSticker\";\r\n//방문자 기록 컴포넌트\r\nconst BackgroundWrap = styled.div`\r\n  background: linear-gradient(180deg, #ffd25d 0%, #ff984b 100%);\r\n`;\r\n//Background : 모바일로 보이는 영역\r\nconst Background = styled.div`\r\n  height: calc(var(--vh, 1vh) * 100);\r\n  max-width: 37.5rem;\r\n  margin: 0px auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: linear-gradient(180deg, #ffd25d 0%, #ff984b 100%);\r\n`;\r\n\r\nconst HeaderWrap = styled.div`\r\n  height: 10%;\r\n  justify-content: center;\r\n  align-item: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst FirstHeader = styled.div`\r\n  height: 30%;\r\n  display: flex;\r\n\r\n  justify-content: flex-start;\r\n  padding-left: 10px;\r\n`;\r\nconst BackIcon = styled.img`\r\n  max-width: 30px;\r\n`;\r\nconst TextHeader = styled.div`\r\n  height: 70%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst Text1 = styled.div`\r\n  color: #191919;\r\n  display: flex;\r\n  text-align: center;\r\n  font-family: Pretendard;\r\n  font-size: 25px;\r\n  margin-top: 10px;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  line-height: 36px;\r\n`;\r\nconst Text2 = styled.div`\r\n  color: rgba(25, 25, 25, 0.8);\r\n  text-align: center;\r\n  display: flex;\r\n  font-family: Pretendard;\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: 36px;\r\n`;\r\nconst HostImg = styled.img`\r\n  max-width: 100px;\r\n  max-height: 150px;\r\n  display: flex;\r\n  position: absolute;\r\n  transform: translate(-40%, -50%);\r\n  top: 40%;\r\n  left: 50%;\r\n`;\r\n\r\nconst BottomWrap = styled.div`\r\n  height: 60%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst Bottom = styled.div`\r\n  border-radius: 40px;\r\n  border: 2px solid var(--unnamed, #12151c);\r\n  background: #fff;\r\n  width: 90%;\r\n  height: 90%;\r\n`;\r\nconst ButtonWrap = styled.div`\r\n  height: 20%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\nconst Footer = styled.div`\r\n  border-radius: 40px 40px 0px 0px;\r\n  border: 2px solid var(--unnamed, #12151c);\r\n  background: #fff;\r\n  width: 90%;\r\n  height: 90%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\nconst Icons = styled.div`\r\n  max-height: 50%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Icon1 = styled.img`\r\n  display: flex;\r\n  width: 22%;\r\n`;\r\nconst Icon2 = styled.img`\r\n  display: flex;\r\n  width: 72%;\r\n`;\r\nconst TextWrap = styled.div`\r\n  justify-content: center;\r\n  align-item: center;\r\n  display: flex;\r\n  height: 8%;\r\n  flex-direction: column;\r\n`;\r\nconst Text = styled.div`\r\n  color: #191919;\r\n  text-align: center;\r\n  font-family: Pretendard;\r\n  font-size: 20px;\r\n  font-style: normal;\r\n  font-weight: 800;\r\n  line-height: 30px;\r\n`;\r\n\r\nexport function Reposition() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const handleBack = () => {\r\n    navigate(\"/hoststicker\");\r\n  };\r\n\r\n  return (\r\n    <BackgroundWrap>\r\n      <Background>\r\n        <MainHeader />\r\n        <TextWrap>\r\n          <Text>스티커를 자유롭게</Text>\r\n          <Text>움직여서 배치해보세요!</Text>\r\n        </TextWrap>\r\n        <RepositionSticker />\r\n        <ButtonWrap>\r\n          <Footer>\r\n            <Icons>\r\n              <Icon1 src={change} />\r\n              <Icon2 onClick={handleBack} src={complete} />\r\n            </Icons>\r\n          </Footer>\r\n        </ButtonWrap>\r\n        {/* Check 버튼 */}\r\n      </Background>\r\n    </BackgroundWrap>\r\n  );\r\n}\r\n\r\nexport default Reposition;\r\n","C:\\react\\total2\\src\\Stickers\\StickerMenu.js",["124","125","126","127","128","129","130","131","132","133","134","135","136"],[],"import styled from \"styled-components\";\r\n\r\nimport React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setIsImageFixed } from \"./reducers\";\r\nimport \"../font/font.css\";\r\nimport { TestBottom } from \"./TestBottom\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport StaticSticker from \"./StaticSticker\";\r\nimport MainHeader from \"../components/HostHeader\";\r\nimport { MainText } from \"./MainText\";\r\nimport HostHeader from \"../components/HostHeader\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setSelectedImage } from \"./imageSlice\";\r\n\r\n/* import menu from \"../img/Stickers_img/menu.png\";\r\nimport change from \"../img/Stickers_img/change.png\";\r\n */\r\n//방문자 기록 컴포넌트\r\nconst BackgroundWrap = styled.div`\r\n  background: #fefaef;\r\n`;\r\n//Background : 모바일로 보이는 영역\r\nconst Background = styled.div`\r\n  height: calc(var(--vh, 1vh) * 100);\r\n  max-width: 37.5rem;\r\n  margin: 0px auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #fefaef;\r\n`;\r\n\r\nconst BottomWrap = styled.div`\r\n  height: 80%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst Bottom = styled.div`\r\n  border-radius: 40px;\r\n  border: 2px solid var(--unnamed, #12151c);\r\n  background: #fff;\r\n  width: 90%;\r\n  height: 90%;\r\n`;\r\n\r\nconst Text1 = styled.div`\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n  height: 10%;\r\n  color: #191919;\r\n  text-align: center;\r\n  font-family: Pretendard;\r\n  font-size: 20px;\r\n  font-style: normal;\r\n  font-weight: 800;\r\n  line-height: 36px;\r\n`;\r\nconst Text2 = styled.div`\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n  height: 10%;\r\n  color: #767676;\r\n  text-align: center;\r\n  font-family: Pretendard;\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  line-height: 36px;\r\n`;\r\nconst Stickers = styled.div`\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n  height: 90%;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst YellowCircle = styled.div`\r\n  width: 20vw;\r\n  padding: 5% 5‰;\r\n  height: 20vw;\r\n  border-radius: 50%;\r\n  background-color: rgba(255, 210, 93, 0.8);\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n`;\r\n\r\nconst CircleContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  max-width: 500px;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst StyledImage = styled.img`\r\n  max-width: 100%;\r\n  max-height: 100%;\r\n`;\r\nconst Div = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nexport function StickerMenu() {\r\n  const navigate = useNavigate();\r\n  const [images, setImageData] = useState([]);\r\n\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n  const handleMenuClick = () => {\r\n    setMenuOpen(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3011/user\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const filteredData = data.filter((item) => item.id !== 1);\r\n        setImageData(filteredData);\r\n        console.log(images);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"오류 발생\", error);\r\n      });\r\n  }, []);\r\n\r\n  const filteredData2 = images.filter((item) => item.id >= 2 && item.id <= 4);\r\n  const filteredData3 = images.filter((item) => item.id >= 5 && item.id <= 7);\r\n  const filteredData4 = images.filter((item) => item.id >= 8 && item.id <= 10);\r\n  const filteredData5 = images.filter((item) => item.id >= 11 && item.id <= 13);\r\n  const filteredData6 = images.filter((item) => item.id >= 14 && item.id <= 16);\r\n  const filteredData7 = images.filter((item) => item.id >= 17 && item.id <= 19);\r\n  console.log(filteredData2);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickSticker = (imageId) => {\r\n    dispatch(setSelectedImage(imageId));\r\n    navigate(\"/clicksticker\");\r\n  };\r\n\r\n  return (\r\n    <BackgroundWrap>\r\n      <Background>\r\n        <HostHeader />\r\n        <BottomWrap>\r\n          <Bottom>\r\n            <Text1>My Faceticker List</Text1>\r\n            <Text2>내 페이지에 부착된 스티커 목록입니다.</Text2>\r\n            <Stickers>\r\n              <First>\r\n                {filteredData2.map((item) => (\r\n                  <Row\r\n                    onClick={() => handleClickSticker(item.id)}\r\n                    key={item.id}\r\n                  >\r\n                    <Circle>\r\n                      <CircleImage src={item.url} alt={item.nickname} />\r\n                    </Circle>\r\n                    <Nickname>닉네임</Nickname>\r\n                    {/*   <Nickname>{item.nickname}</Nickname> */}\r\n                  </Row>\r\n                ))}\r\n              </First>\r\n              <First>\r\n                {filteredData3.map((item) => (\r\n                  <Row key={item.id}>\r\n                    <Circle>\r\n                      <CircleImage src={item.url} alt={item.nickname} />\r\n                    </Circle>\r\n                    <Nickname>닉네임</Nickname>\r\n                    {/*   <Nickname>{item.nickname}</Nickname> */}\r\n                  </Row>\r\n                ))}\r\n              </First>\r\n              <First>\r\n                {filteredData4.map((item) => (\r\n                  <Row key={item.id}>\r\n                    <Circle>\r\n                      <CircleImage src={item.url} alt={item.nickname} />\r\n                    </Circle>\r\n                    <Nickname>닉네임</Nickname>\r\n                    {/*   <Nickname>{item.nickname}</Nickname> */}\r\n                  </Row>\r\n                ))}\r\n              </First>\r\n              <First>\r\n                {filteredData5.map((item) => (\r\n                  <Row key={item.id}>\r\n                    <Circle>\r\n                      <CircleImage src={item.url} alt={item.nickname} />\r\n                    </Circle>\r\n                    <Nickname>닉네임</Nickname>\r\n                    {/*   <Nickname>{item.nickname}</Nickname> */}\r\n                  </Row>\r\n                ))}\r\n              </First>\r\n              <First>\r\n                {filteredData6.map((item) => (\r\n                  <Row key={item.id}>\r\n                    <Circle>\r\n                      <CircleImage src={item.url} alt={item.nickname} />\r\n                    </Circle>\r\n                    <Nickname>닉네임</Nickname>\r\n                    {/*   <Nickname>{item.nickname}</Nickname> */}\r\n                  </Row>\r\n                ))}\r\n              </First>\r\n              <First>\r\n                {filteredData7.map((item) => (\r\n                  <Row key={item.id}>\r\n                    <Circle>\r\n                      <CircleImage src={item.url} alt={item.nickname} />\r\n                    </Circle>\r\n                    <Nickname>닉네임</Nickname>\r\n                    {/*   <Nickname>{item.nickname}</Nickname> */}\r\n                  </Row>\r\n                ))}\r\n              </First>\r\n            </Stickers>\r\n          </Bottom>\r\n        </BottomWrap>\r\n      </Background>\r\n    </BackgroundWrap>\r\n  );\r\n}\r\n\r\nexport default StickerMenu;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\nconst Circle = styled.div`\r\n  display: flex;\r\n  width: 100px;\r\n  height: 100px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(255, 210, 93, 0.8);\r\n  border-radius: 50%;\r\n  filter: drop-shadow(2px 2px 4px rgba(0, 0, 0, 0.2));\r\n`;\r\nconst CircleImage = styled.img`\r\n  display: flex;\r\n  max-height: 80%;\r\n`;\r\nconst Nickname = styled.div`\r\n  color: #000;\r\n  text-align: center;\r\n  font-family: Pretendard;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: 36px;\r\n`;\r\n\r\nconst First = styled.div`\r\n  display: flex;\r\n  margin-bottom: 5%;\r\n  width: 100%;\r\n  height: 30%;\r\n`;\r\n","C:\\react\\total2\\src\\Stickers\\ClickSticker.js",["137","138","139","140","141","142"],[],"import styled from \"styled-components\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Dots from \"../components/Dots\";\r\nimport StaticSticker from \"./StaticSticker\";\r\nimport MainHeader from \"../components/HostHeader\";\r\nimport \"./ClickSticker.css\";\r\nimport \"../font/font.css\";\r\n/* import { StickerPageSlice } from \"./StickerPageSlice\";\r\ndispatch(NicknamePageSlice.actions.letter()); //letter로 페이지 전환 */\r\n\r\n//방문자 기록 컴포넌트\r\nconst BackgroundWrap = styled.div`\r\n  background: linear-gradient(180deg, #ffd25d 0%, #ff984b 100%);\r\n`;\r\n//Background : 모바일로 보이는 영역\r\nconst Background = styled.div`\r\n  height: calc(var(--vh, 1vh) * 100);\r\n  max-width: 37.5rem;\r\n  margin: 0px auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: linear-gradient(180deg, #ffd25d 0%, #ff984b 100%);\r\n`;\r\n\r\nconst Bottom = styled.div`\r\n  height: 70%;\r\n  justify-content: center;\r\n  display: flex;\r\n  position: relative;\r\n`;\r\n\r\nconst CardWrap = styled.div`\r\n  width: 85%;\r\n  height: 87%;\r\n`;\r\n\r\nconst One = styled.div`\r\n  border-radius: 20px;\r\n  width: 100%;\r\n  height: 100%;\r\n  justify-content: center;\r\n  position: relative;\r\n  display: flex;\r\n  background: #fff;\r\n  box-shadow: 0px 4px 16px 0px rgba(0, 0, 0, 0.25);\r\n  z-index: 1000;\r\n`;\r\n\r\nconst OneFlip = styled.div`\r\n  border-radius: 20px;\r\n  width: 100%;\r\n  height: 100%;\r\n  justify-content: center;\r\n  position: relative;\r\n  background: #fff;\r\n  box-shadow: 0px 4px 16px 0px rgba(0, 0, 0, 0.25);\r\n  z-index: 1000;\r\n`;\r\nconst Second = styled.div`\r\n  border-radius: 20px;\r\n  position: absolute;\r\n\r\n  justify-content: center;\r\n  top: 10px;\r\n  display: flex;\r\n  border: 2px solid var(--unnamed, #12151c);\r\n  background: #fefaef;\r\n  width: 90%;\r\n  height: 85%;\r\n  flex-shrink: 0;\r\n  z-index: 10;\r\n`;\r\nconst TrashIcon = styled.img`\r\n  display: flex;\r\n  position: absolute;\r\n  width: 26%;\r\n  right: -2%;\r\n  top: -8%;\r\n`;\r\nconst Shadow = styled.div`\r\n  width: 80%;\r\n  border-radius: 100%;\r\n  position: absolute;\r\n  display: flex;\r\n  bottom: 15%;\r\n  height: 10%;\r\n  display: flex;\r\n  background: var(--unnamed, #e7e4da);\r\n`;\r\n\r\nconst Dot3 = styled.div`\r\n  position: absolute;\r\n  bottom: 7%;\r\n  left: 10%;\r\n`;\r\n\r\nconst Name = styled.div`\r\n  position: absolute;\r\n  bottom: 5%;\r\n  right: 10%;\r\n  width: 30%;\r\n  color: #191919;\r\n  text-align: right;\r\n  font-family: Cafe24Shiningstar;\r\n  font-size: 36px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 24px; /* 66.667% */\r\n`;\r\nconst SecondShadow = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  width: 90%;\r\n  bottom: -5%;\r\n  height: 100%;\r\n  border-radius: 20px;\r\n  background: rgba(244, 243, 249, 0.8);\r\n  box-shadow: 0px 4px 16px 0px rgba(0, 0, 0, 0.1);\r\n  z-index: -1;\r\n`;\r\n\r\nconst Third = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  width: 80%;\r\n  bottom: -10%;\r\n  height: 100%;\r\n  border-radius: 20px;\r\n  background: rgba(244, 243, 249, 0.8);\r\n  box-shadow: 0px 4px 16px 0px rgba(0, 0, 0, 0.1);\r\n  z-index: -2;\r\n`;\r\n\r\nconst Footer = styled.div`\r\n  height: 15%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst Icons = styled.div`\r\n  height: 80%;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  display: flex;\r\n  width: 90%;\r\n`;\r\n\r\nconst Icon = styled.img`\r\n  display: flex;\r\n  width: 50%;\r\n`;\r\n\r\nconst Back = styled.div`\r\n  border-radius: 20px;\r\n  width: 100%;\r\n  height: 100%;\r\n  justify-content: center;\r\n\r\n  position: relative;\r\n  display: flex;\r\n  background: #fff;\r\n  box-shadow: 0px 4px 16px 0px rgba(0, 0, 0, 0.25);\r\n  z-index: 1000;\r\n`;\r\n\r\nconst BackImg = styled.img`\r\n  display: flex;\r\n  width: 85%;\r\n  height: 70%;\r\n  position: absolute;\r\n  top: 10px;\r\n  z-index: -1;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst LetterContent = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  width: 75%;\r\n  bottom: 50%;\r\n  color: #191919;\r\n  text-align: center;\r\n  font-family: Pretendard;\r\n  font-size: 17px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 38px;\r\n`;\r\nconst StickerImg = styled.img`\r\n  display: flex;\r\n  width: 50%;\r\n  position: absolute;\r\n  bottom: 22%;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst StickerImg2 = styled.img`\r\n  display: flex;\r\n  width: 17%;\r\n  position: absolute;\r\n  bottom: 8%;\r\n  object-fit: cover;\r\n`;\r\n\r\nexport function ClickSticker() {\r\n  const [isFlipped, setIsFlipped] = useState(false);\r\n  const [letterValue, setLetterValue] = useState(\"\");\r\n  const [stickerImg, setStickerImg] = useState();\r\n\r\n  const handleCardClick = () => {\r\n    setIsFlipped(!isFlipped);\r\n  };\r\n\r\n  const [imageData, setImageData] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3011/user\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const filteredData = data.filter((item) => item.id !== 1);\r\n        setImageData(filteredData);\r\n        console.log(imageData);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"오류 발생\", error);\r\n      });\r\n  }, []);\r\n\r\n  const handleBackClick = () => {\r\n    navigate(\"/hoststicker\"); //페이지 전환\r\n  };\r\n  const handleTrashClick = () => {\r\n    navigate(\"/hoststicker\");\r\n  };\r\n  /*   const handleProfileClick = (item) => {\r\n    navigate(\"/\"); //해당 스티커 프로필로 \r\n  }; */\r\n\r\n  const idArray = imageData.map((item) => item.id);\r\n  const selectedImageId = useSelector((state) => state.image.selectedImageId);\r\n  console.log(selectedImageId);\r\n\r\n  //서버에서 방문록 받아오기\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3011/user/1\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.letter) {\r\n          setLetterValue(data.letter);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"오류 발생\", error);\r\n      });\r\n  }, []);\r\n\r\n  //이미지 url 받아오기\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3011/user/2\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.url) {\r\n          setStickerImg(data.url);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"오류 발생\", error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <BackgroundWrap>\r\n      <Background>\r\n        <MainHeader />\r\n        <Bottom>\r\n          {idArray.length === 1 && (\r\n            <One>\r\n              <Second>\r\n                <TrashIcon\r\n                  onClick={handleTrashClick}\r\n                  src=\"https://i.ibb.co/vLys4MC/Group-92-1.png\"\r\n                />\r\n                <Shadow />\r\n              </Second>\r\n              <Dot3>\r\n                <Dots />\r\n              </Dot3>\r\n              <Name>수진</Name>\r\n            </One>\r\n          )}\r\n          {idArray.length === 2 && (\r\n            <One>\r\n              <Second>\r\n                <TrashIcon\r\n                  onClick={handleTrashClick}\r\n                  src=\"https://i.ibb.co/vLys4MC/Group-92-1.png\"\r\n                />\r\n                <Shadow />\r\n              </Second>\r\n              <SecondShadow />\r\n              <Dot3>\r\n                <Dots />\r\n              </Dot3>\r\n              <Name>이름</Name>\r\n            </One>\r\n          )}\r\n\r\n          {idArray.length >= 3 && (\r\n            <div\r\n              className={`card ${isFlipped ? \"flipped\" : \"\"}`}\r\n              onClick={handleCardClick}\r\n            >\r\n              <div className=\"front\">\r\n                <Second>\r\n                  <TrashIcon\r\n                    onClick={handleTrashClick}\r\n                    src=\"https://i.ibb.co/vLys4MC/Group-92-1.png\"\r\n                  />\r\n                  <Shadow />\r\n                  <StickerImg src={stickerImg} />\r\n                </Second>\r\n                <SecondShadow />\r\n                <Third />\r\n                <Dot3>\r\n                  <Dots />\r\n                </Dot3>\r\n                <Name>수진</Name>\r\n              </div>\r\n              <div className=\"back\">\r\n                <Back>\r\n                  <TrashIcon\r\n                    onClick={handleTrashClick}\r\n                    src=\"https://i.ibb.co/vLys4MC/Group-92-1.png\"\r\n                  />\r\n                  <BackImg src=\"https://i.ibb.co/3vfvNYb/Post-it-4-3.png\" />\r\n                  <LetterContent>{letterValue}</LetterContent>\r\n                  <StickerImg2 src={stickerImg} />\r\n                </Back>\r\n                <SecondShadow />\r\n                <Third />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Bottom>\r\n\r\n        <Footer>\r\n          <Icons>\r\n            <Icon\r\n              onClick={handleBackClick}\r\n              src=\"https://i.ibb.co/3NCPkMf/Group-95.png\"\r\n            />\r\n            <Icon\r\n              /* onClick = {handleProfileClick} */ src=\"https://i.ibb.co/Gdwfz15/Group-94-1.png\"\r\n            />\r\n          </Icons>\r\n        </Footer>\r\n      </Background>\r\n    </BackgroundWrap>\r\n  );\r\n}\r\n\r\nexport default ClickSticker;\r\n","C:\\react\\total2\\src\\Stickers\\reducers.js",[],[],"C:\\react\\total2\\src\\Stickers\\imageSlice.js",[],[],"C:\\react\\total2\\src\\Stickers\\VisitPut.js",["143","144","145","146","147","148","149","150","151","152"],[],"import styled from \"styled-components\";\r\n\r\nimport React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setIsImageFixed } from \"./reducers\";\r\n\r\nimport { TestBottom } from \"./TestBottom\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//방문자 기록 컴포넌트\r\nconst BackgroundWrap = styled.div`\r\n  background: linear-gradient(180deg, #ffd25d 0%, #ff984b 100%);\r\n`;\r\n//Background : 모바일로 보이는 영역\r\nconst Background = styled.div`\r\n  height: calc(var(--vh, 1vh) * 100);\r\n  max-width: 37.5rem;\r\n  margin: 0px auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  background: linear-gradient(180deg, #ffd25d 0%, #ff984b 100%);\r\n`;\r\n\r\nconst HeaderWrap = styled.div`\r\n  height: 10%;\r\n  justify-content: center;\r\n  align-item: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst FirstHeader = styled.div`\r\n  height: 30%;\r\n  display: flex;\r\n\r\n  justify-content: flex-start;\r\n  padding-left: 10px;\r\n`;\r\nconst BackIcon = styled.img`\r\n  max-width: 30px;\r\n`;\r\nconst TextHeader = styled.div`\r\n  height: 70%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst Text1 = styled.div`\r\n  color: #191919;\r\n  display: flex;\r\n  text-align: center;\r\n  font-family: Pretendard;\r\n  font-size: 25px;\r\n  margin-top: 10px;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  line-height: 36px;\r\n`;\r\nconst Text2 = styled.div`\r\n  color: rgba(25, 25, 25, 0.8);\r\n  text-align: center;\r\n  display: flex;\r\n  font-family: Pretendard;\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: 36px;\r\n`;\r\nconst MiddleImg = styled.div`\r\n  position: absolute;\r\n\r\n  height: 60%;\r\n  top: -60px;\r\n  display: flex;\r\n`;\r\n\r\nconst ButtonWrap = styled.div`\r\n  height: 20%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n  position: relative;\r\n`;\r\nconst Footer = styled.div`\r\n  border-radius: 40px 40px 0px 0px;\r\n  border: 2px solid var(--unnamed, #12151c);\r\n  background: #fff;\r\n  width: 90%;\r\n  height: 90%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\nconst Icon = styled.img`\r\n  max-height: 50%;\r\n  display: flex;\r\n`;\r\n\r\nexport function VisitPut() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [change, setChange] = useState(false);\r\n  const isImageFixed = useSelector((state) => state.app.isImageFixed);\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const [imagePosition, setImagePosition] = useState({ x: 0, y: 0 });\r\n  const [isImageVisible, setIsImageVisible] = useState(false);\r\n\r\n  const [hostImageUrl, setHostImageUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3001/imgUrl/1\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.url) {\r\n          setHostImageUrl(data.url);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"오류 발생\", error);\r\n      });\r\n  }, []);\r\n\r\n  const handleButtonClick = () => {\r\n    dispatch(setIsImageFixed(true)); // \"Check\" 버튼 클릭 시, 스티커 고정\r\n    setChange(true);\r\n  };\r\n\r\n  const handleQnA = () => {\r\n    navigate(\"/qna\");\r\n  };\r\n\r\n  return (\r\n    <BackgroundWrap>\r\n      <Background>\r\n        <HeaderWrap>\r\n          <FirstHeader>\r\n            <BackIcon src=\"https://i.ibb.co/bKVJZtD/arrow-left-1.png\" />\r\n          </FirstHeader>\r\n          <TextHeader>\r\n            <Text1>스티커를 붙여보세요!</Text1>\r\n            <Text2>부착된 스티커는 호스트 외 삭제할 수 없습니다.</Text2>\r\n          </TextHeader>\r\n        </HeaderWrap>\r\n\r\n        <TestBottom />\r\n        {!change && (\r\n          <ButtonWrap>\r\n            <MiddleImg>\r\n              <img src=\"https://i.ibb.co/YP6Zk7b/Group-189.png\" />\r\n            </MiddleImg>\r\n            <Footer>\r\n              <Icon src=\"https://i.ibb.co/R20fGKK/Group-184.png\" />\r\n              <Icon\r\n                onClick={handleButtonClick}\r\n                src=\"https://i.ibb.co/jzV1rX7/Group-183.png\"\r\n              />\r\n            </Footer>\r\n          </ButtonWrap>\r\n        )}\r\n\r\n        {change && (\r\n          <ButtonWrap>\r\n            <MiddleImg>\r\n              <img src=\"https://i.ibb.co/YP6Zk7b/Group-189.png\" />\r\n            </MiddleImg>\r\n            <Footer>\r\n              <Icon src=\"https://i.ibb.co/YQ8KGWf/Group-96.png\" />\r\n              <Icon\r\n                onClick={handleQnA}\r\n                src=\"https://i.ibb.co/DRrtLCx/Group-97.png\"\r\n              />\r\n            </Footer>\r\n          </ButtonWrap>\r\n        )}\r\n      </Background>\r\n    </BackgroundWrap>\r\n  );\r\n}\r\n\r\nexport default VisitPut;\r\n","C:\\react\\total2\\src\\Stickers\\Host.js",["153","154","155","156","157","158","159","160","161","162","163","164","165","166","167"],[],"import styled from \"styled-components\";\r\n\r\nimport React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setIsImageFixed } from \"./reducers\";\r\n\r\nimport { TestBottom } from \"./TestBottom\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport StaticSticker from \"./StaticSticker\";\r\nimport MainHeader from \"../components/HostHeader\";\r\nimport { MainText } from \"./MainText\";\r\nimport menu from \"../img/stickers_img/Group 198.png\";\r\nimport reposition from \"../img/stickers_img/Group 199.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n//방문자 기록 컴포넌트\r\nconst BackgroundWrap = styled.div`\r\n  background: linear-gradient(180deg, #ffd25d 0%, #ff984b 100%);\r\n`;\r\n//Background : 모바일로 보이는 영역\r\nconst Background = styled.div`\r\n  height: calc(var(--vh, 1vh) * 100);\r\n  max-width: 37.5rem;\r\n  margin: 0px auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: linear-gradient(180deg, #ffd25d 0%, #ff984b 100%);\r\n`;\r\n\r\nconst HeaderWrap = styled.div`\r\n  height: 10%;\r\n  justify-content: center;\r\n  align-item: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst FirstHeader = styled.div`\r\n  height: 30%;\r\n  display: flex;\r\n\r\n  justify-content: flex-start;\r\n  padding-left: 10px;\r\n`;\r\nconst BackIcon = styled.img`\r\n  max-width: 30px;\r\n`;\r\nconst TextHeader = styled.div`\r\n  height: 70%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst Text1 = styled.div`\r\n  color: #191919;\r\n  display: flex;\r\n  text-align: center;\r\n  font-family: Pretendard;\r\n  font-size: 25px;\r\n  margin-top: 10px;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  line-height: 36px;\r\n`;\r\nconst Text2 = styled.div`\r\n  color: rgba(25, 25, 25, 0.8);\r\n  text-align: center;\r\n  display: flex;\r\n  font-family: Pretendard;\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: 36px;\r\n`;\r\nconst HostImg = styled.img`\r\n  max-width: 100px;\r\n  max-height: 150px;\r\n  display: flex;\r\n  position: absolute;\r\n  transform: translate(-40%, -50%);\r\n  top: 40%;\r\n  left: 50%;\r\n`;\r\n\r\nconst BottomWrap = styled.div`\r\n  height: 60%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst Bottom = styled.div`\r\n  border-radius: 40px;\r\n  border: 2px solid var(--unnamed, #12151c);\r\n  background: #fff;\r\n  width: 90%;\r\n  height: 90%;\r\n`;\r\nconst ButtonWrap = styled.div`\r\n  height: 20%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\nconst Footer = styled.div`\r\n  border-radius: 40px 40px 0px 0px;\r\n  border: 2px solid var(--unnamed, #12151c);\r\n  background: #fff;\r\n  width: 90%;\r\n  height: 90%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\nconst Icons = styled.div`\r\n  max-height: 50%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Icon1 = styled.img`\r\n  display: flex;\r\n  width: 22%;\r\n`;\r\nconst Icon2 = styled.img`\r\n  display: flex;\r\n  width: 72%;\r\n`;\r\n\r\nexport function Host() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const handleMenu = () => {\r\n    navigate(\"/stickermenu\");\r\n  };\r\n  const handleReposition = () => {\r\n    navigate(\"/repositionsticker\");\r\n  };\r\n  return (\r\n    <BackgroundWrap>\r\n      <Background>\r\n        <MainHeader />\r\n        <MainText />\r\n        <StaticSticker />\r\n        <ButtonWrap>\r\n          <Footer>\r\n            <Icons>\r\n              <Icon1 onClick={handleMenu} src={menu} />\r\n              <Icon2 onClick={handleReposition} src={reposition} />\r\n            </Icons>\r\n          </Footer>\r\n        </ButtonWrap>\r\n        {/* Check 버튼 */}\r\n      </Background>\r\n    </BackgroundWrap>\r\n  );\r\n}\r\n\r\nexport default Host;\r\n","C:\\react\\total2\\src\\Stickers\\MainText.js",[],[],"C:\\react\\total2\\src\\Stickers\\TestBottom.js",["168","169","170","171","172","173","174","175","176","177","178","179"],[],"import styled from \"styled-components\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setIsImageFixed } from \"./reducers\";\r\nimport { useDrag } from \"react-use-gesture\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useGesture } from \"react-use-gesture\";\r\nimport React, { useRef } from \"react\";\r\n\r\n//방문자가 자신의 스티커를 호스트 페이지에 붙이는 컴포넌트\r\n\r\n// 배경 이미지 링크 랜덤 함수\r\nconst getRandomImageLink = () => {\r\n  const images = [\r\n    \"https://i.ibb.co/hgQ81HN/1.png\",\r\n    \"https://i.ibb.co/Z1GwRWj/Untitled-1-1.png\",\r\n  ];\r\n  const randomIndex = Math.floor(Math.random() * images.length);\r\n  return images[randomIndex];\r\n};\r\n\r\n//style\r\nconst HostImg = styled.img`\r\n  max-width: 100px;\r\n  max-height: 150px;\r\n  display: flex;\r\n  position: absolute;\r\n  transform: translate(-40%, 50%);\r\n  top: 40%;\r\n  left: 50%;\r\n`;\r\n\r\nconst BottomWrap = styled.div`\r\n  height: 60%;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\nconst Bottoms = styled.div`\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  border-radius: 40px;\r\n\r\n  display: flex;\r\n  border: 2px solid var(--unnamed, #12151c);\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 90%;\r\n  height: 90%;\r\n\r\n  background-image: url(\"${getRandomImageLink()}\");\r\n  overflow: scroll;\r\n`;\r\n\r\nconst Bottom = styled.div`\r\n  width: 200%;\r\n  height: 200%;\r\n  position: relative;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst ZoomButtons = styled.div`\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  display: flex;\r\n  gap: 8px;\r\n`;\r\n\r\nconst ZoomButton = styled.button`\r\n  padding: 6px 10px;\r\n  background-color: #fff;\r\n  border: 1px solid #000;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport function TestBottom() {\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const [imagePosition, setImagePosition] = useState(null);\r\n  const [isImageVisible, setIsImageVisible] = useState(false);\r\n  const [hostImageUrl, setHostImageUrl] = useState(null);\r\n  const [componentWidth, setComponentWidth] = useState(0);\r\n  const [componentHeight, setComponentHeight] = useState(0);\r\n  const [bottomWidth, setBottomWidth] = useState(\"100%\");\r\n  const [bottomHeight, setBottomHeight] = useState(\"100%\");\r\n\r\n  const isImageFixed = useSelector((state) => state.app.isImageFixed);\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3010/user/1\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.url) {\r\n          setHostImageUrl(data.url);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"오류 발생\", error);\r\n      });\r\n  }, []);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //Bottom 높이, 너비 반환\r\n  const componentRef = useRef(null);\r\n  useEffect(() => {\r\n    if (componentRef.current) {\r\n      const w = componentRef.current.offsetWidth;\r\n      const h = componentRef.current.offsetHeight;\r\n      console.log(\"Width:\", w);\r\n      console.log(\"Height:\", h);\r\n      setComponentWidth(w);\r\n      setComponentHeight(h);\r\n    }\r\n  }, []);\r\n\r\n  const handleFetchImageAndImageClick = async (event) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:3010/user/2\");\r\n      const data = await response.json();\r\n      setImageUrl(data.url);\r\n\r\n      const sidePosition = {\r\n        // 클릭한 엘리먼트의 절대좌표\r\n        // .getBoundingClientRect().left 뷰포트 기준 X값 top은 Y 값\r\n        X: Math.floor(event.target.getBoundingClientRect().left),\r\n        Y: Math.floor(event.target.getBoundingClientRect().top),\r\n      };\r\n\r\n      const clickPosition = {\r\n        X: Math.floor(event.clientX),\r\n        Y: Math.floor(event.clientY),\r\n      };\r\n\r\n      const ratio = {\r\n        X: clickPosition.X - sidePosition.X,\r\n        Y: clickPosition.Y - sidePosition.Y,\r\n      };\r\n\r\n      // 상대 좌표\r\n      const XPer = (ratio.X / componentWidth) * 100;\r\n      const YPer = (ratio.Y / componentHeight) * 100;\r\n      // 소수점 둘째 자리까지 반올림\r\n      const xyPer = { XPer: XPer.toFixed(2), YPer: YPer.toFixed(2) };\r\n      setImagePosition(xyPer);\r\n\r\n      console.log(imagePosition);\r\n      setIsImageVisible(true);\r\n      dispatch(setIsImageFixed(false)); // 이미지 클릭 시, 스티커 고정 상태를 해제\r\n    } catch (error) {\r\n      console.error(\"이미지 URL 가져오기 오류:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isImageFixed) {\r\n      fetch(\"http://localhost:3010/user\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ imgposition: imagePosition }),\r\n      })\r\n        .then((response) => response.json())\r\n\r\n        .catch((error) => {\r\n          console.error(\"오류 발생\", error);\r\n        });\r\n    }\r\n  }, [isImageFixed]);\r\n\r\n  const [zoomLevel, setZoomLevel] = useState(1);\r\n  const minZoomLevel = 0.5;\r\n  const maxZoomLevel = 2;\r\n\r\n  // 줌 인 함수\r\n  const zoomIn = () => {\r\n    if (zoomLevel < maxZoomLevel) {\r\n      setZoomLevel((prevZoom) => prevZoom + 0.1);\r\n    }\r\n  };\r\n\r\n  // 줌 아웃 함수\r\n  const zoomOut = () => {\r\n    if (zoomLevel > minZoomLevel) {\r\n      setZoomLevel((prevZoom) => prevZoom - 0.1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BottomWrap>\r\n      <Bottoms ref={componentRef}>\r\n        <Bottom style={{ transform: `scale(${zoomLevel})` }}>\r\n          {/* 클릭 이벤트 리스너 */}\r\n          {!isImageFixed && (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                width: \"85%\",\r\n                height: \"85%\",\r\n              }}\r\n              onClick={handleFetchImageAndImageClick}\r\n            ></div>\r\n          )}\r\n          <HostImg src={hostImageUrl} />\r\n          {/* 이미지가 보이는 경우 */}\r\n\r\n          {isImageVisible && (\r\n            <img\r\n              src={imageUrl}\r\n              style={{\r\n                display: \"flex\",\r\n                maxWidth: \"100px\",\r\n                position: \"absolute\",\r\n                top: `${(imagePosition.YPer * componentHeight) / 100}px`,\r\n                left: `${(imagePosition.XPer * componentWidth) / 100}px`,\r\n                zIndex: 9999,\r\n              }}\r\n            />\r\n          )}\r\n        </Bottom>\r\n      </Bottoms>\r\n      {/*   <ZoomButtons>\r\n        <ZoomButton onClick={zoomIn}>Zoom In</ZoomButton>\r\n        <ZoomButton onClick={zoomOut}>Zoom Out</ZoomButton>\r\n      </ZoomButtons> */}\r\n    </BottomWrap>\r\n  );\r\n}\r\n\r\nexport default TestBottom;\r\n","C:\\react\\total2\\src\\Stickers\\StaticSticker.js",["180","181","182","183","184","185","186","187","188","189"],[],"import styled from \"styled-components\";\r\nimport React, { useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setIsImageFixed } from \"./reducers\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//방문자 기록 컴포넌트\r\n\r\n// 배경 이미지 링크 랜덤 함수\r\nconst getRandomImageLink = () => {\r\n  const images = [\r\n    \"https://i.ibb.co/hgQ81HN/1.png\",\r\n    \"https://i.ibb.co/Z1GwRWj/Untitled-1-1.png\",\r\n  ];\r\n  const randomIndex = Math.floor(Math.random() * images.length);\r\n  return images[randomIndex];\r\n};\r\n//style\r\nconst HostImg = styled.img`\r\n  max-width: 100px;\r\n  max-height: 150px;\r\n  display: flex;\r\n  position: absolute;\r\n  transform: translate(-40%, -50%);\r\n  top: 45%;\r\n  left: 50%;\r\n`;\r\n\r\nconst BottomWrap = styled.div`\r\n  height: 60%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst Bottoms = styled.div`\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  border-radius: 40px;\r\n  border: 2px solid var(--unnamed, #12151c);\r\n  width: 90%;\r\n  height: 90%;\r\n  background-image: url(\"${getRandomImageLink()}\");\r\n`;\r\n\r\nconst Bottom = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n`;\r\n\r\nconst ZoomButtons = styled.div`\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  display: flex;\r\n  gap: 8px;\r\n`;\r\n\r\nconst ZoomButton = styled.button`\r\n  padding: 6px 10px;\r\n  background-color: #fff;\r\n  border: 1px solid #000;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport function StaticSticker() {\r\n  const [hostImageUrl, setHostImageUrl] = useState(null);\r\n  const isImageFixed = useSelector((state) => state.app.isImageFixed);\r\n  const [imageData, setImageData] = useState([]);\r\n  const [componentWidth, setComponentWidth] = useState(0);\r\n  const [componentHeight, setComponentHeight] = useState(0);\r\n\r\n  //컴포넌트 높이, 너비\r\n  const componentRef = useRef(null);\r\n  useEffect(() => {\r\n    if (componentRef.current) {\r\n      const w = componentRef.current.offsetWidth;\r\n      const h = componentRef.current.offsetHeight;\r\n      console.log(\"Width:\", w);\r\n      console.log(\"Height:\", h);\r\n      setComponentWidth(w);\r\n      setComponentHeight(h);\r\n    }\r\n  }, []);\r\n\r\n  //host image 받아오기\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3011/user/1\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.url) {\r\n          setHostImageUrl(data.url);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"오류 발생\", error);\r\n      });\r\n  }, []);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3011/user\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const filteredData = data.filter((item) => item.id !== 1);\r\n        setImageData(filteredData);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"오류 발생\", error);\r\n      });\r\n  }, []);\r\n\r\n  const handleStickerClick = (item) => {\r\n    navigate(\"/clicksticker\"); //페이지 전환\r\n  };\r\n  const [zoomLevel, setZoomLevel] = useState(1);\r\n  const minZoomLevel = 0.5;\r\n  const maxZoomLevel = 2;\r\n\r\n  // 줌 인 함수\r\n  const zoomIn = () => {\r\n    if (zoomLevel < maxZoomLevel) {\r\n      setZoomLevel((prevZoom) => prevZoom + 0.1);\r\n    }\r\n  };\r\n\r\n  // 줌 아웃 함수\r\n  const zoomOut = () => {\r\n    if (zoomLevel > minZoomLevel) {\r\n      setZoomLevel((prevZoom) => prevZoom - 0.1);\r\n    }\r\n  };\r\n\r\n  const [scale, setScale] = useState(1); // 초기 스케일 값은 1\r\n\r\n  return (\r\n    <BottomWrap>\r\n      <Bottoms>\r\n        <Bottom ref={componentRef} style={{ transform: `scale(${zoomLevel})` }}>\r\n          <HostImg src={hostImageUrl} />\r\n\r\n          {imageData.map((item) => (\r\n            <img\r\n              onClick={() => handleStickerClick(item)}\r\n              key={item.id}\r\n              src={item.url}\r\n              style={{\r\n                position: \"absolute\",\r\n                top: `${(item.imgposition.YPer * componentHeight) / 100}px`,\r\n                left: `${(item.imgposition.XPer * componentWidth) / 100}px`,\r\n                zIndex: 9999,\r\n                maxWidth: \"100px\",\r\n              }}\r\n              alt={`Image ${item.id}`}\r\n            />\r\n          ))}\r\n        </Bottom>\r\n      </Bottoms>\r\n\r\n      {/*      <ZoomButtons>\r\n        <ZoomButton onClick={zoomIn}>Zoom In</ZoomButton>\r\n        <ZoomButton onClick={zoomOut}>Zoom Out</ZoomButton>\r\n      </ZoomButtons> */}\r\n    </BottomWrap>\r\n  );\r\n}\r\n\r\nexport default StaticSticker;\r\n","C:\\react\\total2\\src\\Stickers\\RepositionSticker.js",["190","191","192","193","194","195","196","197","198","199","200","201","202","203","204"],[],"import styled from \"styled-components\";\r\nimport React, { useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setIsImageFixed } from \"./reducers\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport zoom from \"../img/stickers_img/zoom.png\";\r\n\r\n//방문자 기록 컴포넌트\r\n\r\n// 배경 이미지 링크 랜덤 함수\r\nconst getRandomImageLink = () => {\r\n  const images = [\r\n    \"https://i.ibb.co/hgQ81HN/1.png\",\r\n    \"https://i.ibb.co/Z1GwRWj/Untitled-1-1.png\",\r\n  ];\r\n  const randomIndex = Math.floor(Math.random() * images.length);\r\n  return images[randomIndex];\r\n};\r\n//style\r\nconst HostImg = styled.img`\r\n  max-width: 100px;\r\n  max-height: 150px;\r\n  display: flex;\r\n  position: absolute;\r\n  transform: translate(-40%, -50%);\r\n  top: 45%;\r\n  left: 50%;\r\n`;\r\n\r\nconst BottomWrap = styled.div`\r\n  height: 60%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst Bottoms = styled.div`\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  border-radius: 40px;\r\n  border: 2px solid var(--unnamed, #12151c);\r\n  width: 90%;\r\n  height: 90%;\r\n  background-image: url(\"${getRandomImageLink()}\");\r\n`;\r\n\r\nconst Bottom = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n`;\r\n\r\nconst ZoomButtons = styled.div`\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  display: flex;\r\n  gap: 8px;\r\n`;\r\n\r\nconst ZoomButton = styled.button`\r\n  padding: 6px 10px;\r\n  background-color: #fff;\r\n  border: 1px solid #000;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport function RepositionSticker() {\r\n  const [hostImageUrl, setHostImageUrl] = useState(null);\r\n  const isImageFixed = useSelector((state) => state.app.isImageFixed);\r\n  const [imageData, setImageData] = useState([]);\r\n  const [componentWidth, setComponentWidth] = useState(0);\r\n  const [componentHeight, setComponentHeight] = useState(0);\r\n\r\n  //컴포넌트 높이, 너비\r\n  const componentRef = useRef(null);\r\n  useEffect(() => {\r\n    if (componentRef.current) {\r\n      const w = componentRef.current.offsetWidth;\r\n      const h = componentRef.current.offsetHeight;\r\n      console.log(\"Width:\", w);\r\n      console.log(\"Height:\", h);\r\n      setComponentWidth(w);\r\n      setComponentHeight(h);\r\n    }\r\n  }, []);\r\n\r\n  //host image 받아오기\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3011/user/1\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.url) {\r\n          setHostImageUrl(data.url);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"오류 발생\", error);\r\n      });\r\n  }, []);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3011/user\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const filteredData = data.filter((item) => item.id !== 1);\r\n        setImageData(filteredData);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"오류 발생\", error);\r\n      });\r\n  }, []);\r\n\r\n  const [zoomLevel, setZoomLevel] = useState(1);\r\n  const minZoomLevel = 0.5;\r\n  const maxZoomLevel = 2;\r\n\r\n  // 줌 인 함수\r\n  const zoomIn = () => {\r\n    if (zoomLevel < maxZoomLevel) {\r\n      setZoomLevel((prevZoom) => prevZoom + 0.1);\r\n    }\r\n  };\r\n\r\n  // 줌 아웃 함수\r\n  const zoomOut = () => {\r\n    if (zoomLevel > minZoomLevel) {\r\n      setZoomLevel((prevZoom) => prevZoom - 0.1);\r\n    }\r\n  };\r\n\r\n  const [selectedImageId, setSelectedImageId] = useState(null);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [ImagePosition, setImagePosition] = useState(null);\r\n\r\n  const handleImageMouseDown = (event, itemId) => {\r\n    setSelectedImageId(itemId);\r\n    setIsDragging(true);\r\n    const offsetX = event.nativeEvent.offsetX;\r\n    const offsetY = event.nativeEvent.offsetY;\r\n    setDragOffset({ x: offsetX, y: offsetY });\r\n  };\r\n\r\n  const handleMouseMove = (event) => {\r\n    if (isDragging && selectedImageId !== null) {\r\n      const sidePosition = {\r\n        // 클릭한 엘리먼트의 절대좌표\r\n        // .getBoundingClientRect().left 뷰포트 기준 X값 top은 Y 값\r\n        X: Math.floor(event.target.getBoundingClientRect().left),\r\n        Y: Math.floor(event.target.getBoundingClientRect().top),\r\n      };\r\n\r\n      const clickPosition = {\r\n        X: Math.floor(event.clientX),\r\n        Y: Math.floor(event.clientY),\r\n      };\r\n\r\n      const ratio = {\r\n        X: clickPosition.X - sidePosition.X,\r\n        Y: clickPosition.Y - sidePosition.Y,\r\n      };\r\n\r\n      // 상대 좌표\r\n      /* const XPer = (ratio.X / componentWidth) * 100;\r\n      const YPer = (ratio.Y / componentHeight) * 100; */\r\n      // 소수점 둘째 자리까지 반올림\r\n      /*   const xyPer = { XPer: XPer.toFixed(2), YPer: YPer.toFixed(2) };\r\n      setImagePosition(xyPer); */\r\n\r\n      const offsetX = event.nativeEvent.offsetX;\r\n      const offsetY = event.nativeEvent.offsetY;\r\n\r\n      setImageData((prevImageData) =>\r\n        prevImageData.map((item) =>\r\n          item.id === selectedImageId\r\n            ? {\r\n                ...item,\r\n                imgposition: {\r\n                  XPer: (ratio.X / componentWidth) * 100,\r\n                  YPer: (ratio.Y / componentHeight) * 100,\r\n                },\r\n              }\r\n            : item\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDragging(false);\r\n    setSelectedImageId(null);\r\n  };\r\n  return (\r\n    <BottomWrap>\r\n      <Bottoms>\r\n        <Bottom ref={componentRef} style={{ transform: `scale(${zoomLevel})` }}>\r\n          <HostImg src={hostImageUrl} />\r\n\r\n          {imageData.map((item) => (\r\n            <img\r\n              key={item.id}\r\n              src={item.url}\r\n              style={{\r\n                position: \"absolute\",\r\n                top: (item.imgposition.YPer * componentHeight) / 100,\r\n                left: `${(item.imgposition.XPer * componentWidth) / 100}px`,\r\n                zIndex: 9999,\r\n                maxWidth: \"100px\",\r\n                cursor: selectedImageId === item.id ? \"grabbing\" : \"grab\",\r\n              }}\r\n              alt={`Image ${item.id}`}\r\n              onMouseDown={(event) => handleImageMouseDown(event, item.id)}\r\n              onMouseMove={handleMouseMove}\r\n              onMouseUp={handleMouseUp}\r\n            />\r\n          ))}\r\n          {imageData.map((item) => (\r\n            <img\r\n              key={item.id}\r\n              src={zoom}\r\n              style={{\r\n                position: \"absolute\",\r\n                width: \"20px\",\r\n                top: `${\r\n                  -10 + (item.imgposition.YPer * componentHeight) / 100\r\n                }px`,\r\n                left: `${\r\n                  90 + (item.imgposition.XPer * componentWidth) / 100\r\n                }px`,\r\n                zIndex: 9999,\r\n                maxWidth: \"100px\",\r\n              }}\r\n              alt={`Image ${item.id}`}\r\n            />\r\n          ))}\r\n        </Bottom>\r\n      </Bottoms>\r\n\r\n      {/*      <ZoomButtons>\r\n        <ZoomButton onClick={zoomIn}>Zoom In</ZoomButton>\r\n        <ZoomButton onClick={zoomOut}>Zoom Out</ZoomButton>\r\n      </ZoomButtons> */}\r\n    </BottomWrap>\r\n  );\r\n}\r\n\r\nexport default RepositionSticker;\r\n","C:\\react\\total2\\src\\components\\Dots.js",[],[],"C:\\react\\total2\\src\\components\\HostHeader.js",["205","206"],[],"import styled from \"styled-components\";\r\nimport \"../font/font.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Modal from \"react-modal\";\r\nimport { useState } from \"react\";\r\n\r\n//호스트 헤더\r\n\r\n//BackgroundWrap : 가로 길어졌을 때 Background는 고정. 나머지 영역에 보이게 할 색/이미지 설정\r\nconst BackgroundWrap = styled.div`\r\n  background: linear-gradient(180deg, #ffd25d 0%, #ff984b 100%);\r\n`;\r\n//Background : 모바일로 보이는 영역\r\nconst Background = styled.div`\r\n  height: calc(var(--vh, 1vh) * 100);\r\n  max-width: 37.5rem;\r\n  margin: 0px auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: linear-gradient(180deg, #ffd25d 0%, #ff984b 100%);\r\n`;\r\n\r\nconst HeaderWrap = styled.div`\r\n  height: 10%;\r\n  justify-content: center;\r\n  align-item: center;\r\n  display: flex;\r\n`;\r\nconst Header = styled.div`\r\n  display: flex;\r\n  height: 50%;\r\n  width: 100%;\r\n  margin: auto;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n`;\r\nconst HeaderIcon = styled.div`\r\n  width: 15%;\r\n  justify-content: center;\r\n  align-item: center;\r\n  display: flex;\r\n`;\r\nconst LogoWrap = styled.div`\r\n  justify-content: center;\r\n  align-item: center;\r\n  display: flex;\r\n  width: 70%;\r\n`;\r\nconst Logo = styled.div`\r\n  margin: auto;\r\n  font-family: \"LotteriaChab\";\r\n  font-weight: normal;\r\n  font-style: normal;\r\n  color: #ff6d00;\r\n  text-align: center;\r\n  font-size: 24px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 20px;\r\n`;\r\n\r\nconst style = {\r\n  width: \"50%\",\r\n  margin: \"auto\",\r\n};\r\n\r\nconst ModalStyle = {\r\n  overlay: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.50)\",\r\n  },\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    height: \"300px\",\r\n    width: \"250px\",\r\n    boxShadow: \"2px 4px 10px 0px #00000030\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    borderRadius: \"20px\",\r\n    border: \"none\",\r\n  },\r\n};\r\n\r\nconst ModalContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  height: 300px;\r\n  width: 250px;\r\n`;\r\n\r\nconst EidtImg = styled.img`\r\n  width: 20%;\r\n  display: flex;\r\n`;\r\nconst EidtButtons = styled.div`\r\n  width: 90%;\r\n  height:70%:\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  margin-top: 10%;\r\n`;\r\n\r\nconst EditButton = styled.img`\r\n  display: flex;\r\n  width: 100%;\r\n  margin-bottom: 3%;\r\n`;\r\n\r\nconst Close = styled.img`\r\n  position: absolute;\r\n  width: 10%;\r\n  right: 5%;\r\n  top: 0%;\r\n`;\r\n\r\nexport function MainHeader() {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  //설정\r\n  const handleFirstClick = () => {\r\n    navigate(\"/initial\");\r\n  };\r\n  const handleSecondClick = () => {\r\n    navigate(\"/makesticker\");\r\n  };\r\n  const handleThirdClick = () => {\r\n    navigate(\"/status\");\r\n  };\r\n\r\n  const handleLogoClick = () => {\r\n    navigate(\"/mainhost\");\r\n  };\r\n\r\n  const handleChatClick = () => {\r\n    navigate(\"/qna\");\r\n  };\r\n\r\n  const openModal = () => {\r\n    setModalIsOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <HeaderWrap>\r\n      <Header>\r\n        <HeaderIcon>\r\n          <img\r\n            onClick={openModal}\r\n            style={style}\r\n            src=\"https://i.ibb.co/TrT3xzs/gear-settings-1.png\"\r\n            alt=\"setting-icon\"\r\n          />\r\n        </HeaderIcon>\r\n        <Modal\r\n          style={ModalStyle}\r\n          isOpen={modalIsOpen}\r\n          onRequestClose={closeModal}\r\n          contentLabel=\"Faceticker-Modal\"\r\n        >\r\n          <ModalContent>\r\n            <Close\r\n              onClick={closeModal}\r\n              src=\"https://i.ibb.co/Cw1y11J/close-x.png\"\r\n            />\r\n            <EidtImg src=\"https://i.ibb.co/LNBGHHr/square-edit.png\" />\r\n            <EidtButtons>\r\n              <EditButton\r\n                onClick={handleFirstClick}\r\n                src=\"https://i.ibb.co/7QPq765/Group-190.png\"\r\n              />\r\n              <EditButton\r\n                onClick={handleSecondClick}\r\n                src=\"https://i.ibb.co/TMWMM0g/Group-191.png\"\r\n              />\r\n              <EditButton\r\n                onClick={handleThirdClick}\r\n                src=\"https://i.ibb.co/Qkm8sPF/Group-192.png\"\r\n              />\r\n            </EidtButtons>\r\n          </ModalContent>\r\n        </Modal>\r\n        <LogoWrap>\r\n          <Logo onClick={handleLogoClick}>FACETICKER</Logo>\r\n        </LogoWrap>\r\n\r\n        <HeaderIcon>\r\n          <img\r\n            onClick={handleChatClick}\r\n            style={style}\r\n            src=\"https://i.ibb.co/pjkMqBz/ri-message-3-line.png\"\r\n            alt=\"ChatIcon\"\r\n          />\r\n        </HeaderIcon>\r\n      </Header>\r\n    </HeaderWrap>\r\n  );\r\n}\r\n\r\nexport default MainHeader;\r\n",{"ruleId":"207","severity":1,"message":"208","line":4,"column":10,"nodeType":"209","messageId":"210","endLine":4,"endColumn":21},{"ruleId":"207","severity":1,"message":"211","line":5,"column":10,"nodeType":"209","messageId":"210","endLine":5,"endColumn":25},{"ruleId":"207","severity":1,"message":"212","line":7,"column":10,"nodeType":"209","messageId":"210","endLine":7,"endColumn":20},{"ruleId":"207","severity":1,"message":"213","line":8,"column":10,"nodeType":"209","messageId":"210","endLine":8,"endColumn":18},{"ruleId":"207","severity":1,"message":"214","line":9,"column":10,"nodeType":"209","messageId":"210","endLine":9,"endColumn":19},{"ruleId":"207","severity":1,"message":"215","line":10,"column":8,"nodeType":"209","messageId":"210","endLine":10,"endColumn":21},{"ruleId":"207","severity":1,"message":"216","line":12,"column":10,"nodeType":"209","messageId":"210","endLine":12,"endColumn":18},{"ruleId":"207","severity":1,"message":"217","line":31,"column":7,"nodeType":"209","messageId":"210","endLine":31,"endColumn":17},{"ruleId":"207","severity":1,"message":"218","line":38,"column":7,"nodeType":"209","messageId":"210","endLine":38,"endColumn":18},{"ruleId":"207","severity":1,"message":"219","line":45,"column":7,"nodeType":"209","messageId":"210","endLine":45,"endColumn":15},{"ruleId":"207","severity":1,"message":"220","line":48,"column":7,"nodeType":"209","messageId":"210","endLine":48,"endColumn":17},{"ruleId":"207","severity":1,"message":"221","line":55,"column":7,"nodeType":"209","messageId":"210","endLine":55,"endColumn":12},{"ruleId":"207","severity":1,"message":"222","line":66,"column":7,"nodeType":"209","messageId":"210","endLine":66,"endColumn":12},{"ruleId":"207","severity":1,"message":"223","line":76,"column":7,"nodeType":"209","messageId":"210","endLine":76,"endColumn":14},{"ruleId":"207","severity":1,"message":"224","line":86,"column":7,"nodeType":"209","messageId":"210","endLine":86,"endColumn":17},{"ruleId":"207","severity":1,"message":"225","line":93,"column":7,"nodeType":"209","messageId":"210","endLine":93,"endColumn":13},{"ruleId":"207","severity":1,"message":"226","line":150,"column":9,"nodeType":"209","messageId":"210","endLine":150,"endColumn":17},{"ruleId":"207","severity":1,"message":"208","line":4,"column":10,"nodeType":"209","messageId":"210","endLine":4,"endColumn":21},{"ruleId":"207","severity":1,"message":"211","line":5,"column":10,"nodeType":"209","messageId":"210","endLine":5,"endColumn":25},{"ruleId":"207","severity":1,"message":"212","line":7,"column":10,"nodeType":"209","messageId":"210","endLine":7,"endColumn":20},{"ruleId":"207","severity":1,"message":"215","line":10,"column":8,"nodeType":"209","messageId":"210","endLine":10,"endColumn":21},{"ruleId":"207","severity":1,"message":"227","line":11,"column":8,"nodeType":"209","messageId":"210","endLine":11,"endColumn":18},{"ruleId":"207","severity":1,"message":"216","line":12,"column":10,"nodeType":"209","messageId":"210","endLine":12,"endColumn":18},{"ruleId":"207","severity":1,"message":"228","line":84,"column":7,"nodeType":"209","messageId":"210","endLine":84,"endColumn":19},{"ruleId":"207","severity":1,"message":"229","line":98,"column":7,"nodeType":"209","messageId":"210","endLine":98,"endColumn":22},{"ruleId":"207","severity":1,"message":"230","line":107,"column":7,"nodeType":"209","messageId":"210","endLine":107,"endColumn":18},{"ruleId":"207","severity":1,"message":"231","line":111,"column":7,"nodeType":"209","messageId":"210","endLine":111,"endColumn":10},{"ruleId":"207","severity":1,"message":"232","line":119,"column":10,"nodeType":"209","messageId":"210","endLine":119,"endColumn":18},{"ruleId":"207","severity":1,"message":"233","line":121,"column":9,"nodeType":"209","messageId":"210","endLine":121,"endColumn":24},{"ruleId":"234","severity":1,"message":"235","line":136,"column":6,"nodeType":"236","endLine":136,"endColumn":8,"suggestions":"237"},{"ruleId":"207","severity":1,"message":"238","line":2,"column":23,"nodeType":"209","messageId":"210","endLine":2,"endColumn":32},{"ruleId":"207","severity":1,"message":"215","line":6,"column":8,"nodeType":"209","messageId":"210","endLine":6,"endColumn":21},{"ruleId":"207","severity":1,"message":"239","line":34,"column":7,"nodeType":"209","messageId":"210","endLine":34,"endColumn":15},{"ruleId":"207","severity":1,"message":"240","line":51,"column":7,"nodeType":"209","messageId":"210","endLine":51,"endColumn":14},{"ruleId":"207","severity":1,"message":"226","line":219,"column":9,"nodeType":"209","messageId":"210","endLine":219,"endColumn":17},{"ruleId":"234","severity":1,"message":"241","line":233,"column":6,"nodeType":"236","endLine":233,"endColumn":8,"suggestions":"242"},{"ruleId":"207","severity":1,"message":"243","line":107,"column":9,"nodeType":"209","messageId":"210","endLine":107,"endColumn":21},{"ruleId":"207","severity":1,"message":"244","line":108,"column":10,"nodeType":"209","messageId":"210","endLine":108,"endColumn":18},{"ruleId":"207","severity":1,"message":"245","line":108,"column":20,"nodeType":"209","messageId":"210","endLine":108,"endColumn":31},{"ruleId":"207","severity":1,"message":"246","line":109,"column":10,"nodeType":"209","messageId":"210","endLine":109,"endColumn":23},{"ruleId":"207","severity":1,"message":"247","line":109,"column":25,"nodeType":"209","messageId":"210","endLine":109,"endColumn":41},{"ruleId":"207","severity":1,"message":"248","line":110,"column":10,"nodeType":"209","messageId":"210","endLine":110,"endColumn":24},{"ruleId":"207","severity":1,"message":"249","line":110,"column":26,"nodeType":"209","messageId":"210","endLine":110,"endColumn":43},{"ruleId":"207","severity":1,"message":"250","line":112,"column":10,"nodeType":"209","messageId":"210","endLine":112,"endColumn":22},{"ruleId":"251","severity":1,"message":"252","line":153,"column":15,"nodeType":"253","endLine":153,"endColumn":67},{"ruleId":"251","severity":1,"message":"252","line":168,"column":15,"nodeType":"253","endLine":168,"endColumn":67},{"ruleId":"207","severity":1,"message":"208","line":4,"column":10,"nodeType":"209","messageId":"210","endLine":4,"endColumn":21},{"ruleId":"207","severity":1,"message":"211","line":5,"column":10,"nodeType":"209","messageId":"210","endLine":5,"endColumn":25},{"ruleId":"207","severity":1,"message":"212","line":7,"column":10,"nodeType":"209","messageId":"210","endLine":7,"endColumn":20},{"ruleId":"207","severity":1,"message":"213","line":8,"column":10,"nodeType":"209","messageId":"210","endLine":8,"endColumn":18},{"ruleId":"207","severity":1,"message":"214","line":9,"column":10,"nodeType":"209","messageId":"210","endLine":9,"endColumn":19},{"ruleId":"207","severity":1,"message":"217","line":30,"column":7,"nodeType":"209","messageId":"210","endLine":30,"endColumn":17},{"ruleId":"207","severity":1,"message":"218","line":37,"column":7,"nodeType":"209","messageId":"210","endLine":37,"endColumn":18},{"ruleId":"207","severity":1,"message":"219","line":44,"column":7,"nodeType":"209","messageId":"210","endLine":44,"endColumn":15},{"ruleId":"207","severity":1,"message":"220","line":47,"column":7,"nodeType":"209","messageId":"210","endLine":47,"endColumn":17},{"ruleId":"207","severity":1,"message":"221","line":54,"column":7,"nodeType":"209","messageId":"210","endLine":54,"endColumn":12},{"ruleId":"207","severity":1,"message":"222","line":65,"column":7,"nodeType":"209","messageId":"210","endLine":65,"endColumn":12},{"ruleId":"207","severity":1,"message":"223","line":75,"column":7,"nodeType":"209","messageId":"210","endLine":75,"endColumn":14},{"ruleId":"207","severity":1,"message":"224","line":85,"column":7,"nodeType":"209","messageId":"210","endLine":85,"endColumn":17},{"ruleId":"207","severity":1,"message":"225","line":92,"column":7,"nodeType":"209","messageId":"210","endLine":92,"endColumn":13},{"ruleId":"207","severity":1,"message":"226","line":133,"column":9,"nodeType":"209","messageId":"210","endLine":133,"endColumn":17},{"ruleId":"207","severity":1,"message":"254","line":5,"column":10,"nodeType":"209","messageId":"210","endLine":5,"endColumn":17},{"ruleId":"207","severity":1,"message":"255","line":7,"column":10,"nodeType":"209","messageId":"210","endLine":7,"endColumn":20},{"ruleId":"207","severity":1,"message":"256","line":65,"column":7,"nodeType":"209","messageId":"210","endLine":65,"endColumn":18},{"ruleId":"207","severity":1,"message":"257","line":73,"column":7,"nodeType":"209","messageId":"210","endLine":73,"endColumn":17},{"ruleId":"207","severity":1,"message":"258","line":88,"column":10,"nodeType":"209","messageId":"210","endLine":88,"endColumn":21},{"ruleId":"207","severity":1,"message":"259","line":88,"column":23,"nodeType":"209","messageId":"210","endLine":88,"endColumn":37},{"ruleId":"207","severity":1,"message":"260","line":89,"column":10,"nodeType":"209","messageId":"210","endLine":89,"endColumn":22},{"ruleId":"207","severity":1,"message":"261","line":89,"column":24,"nodeType":"209","messageId":"210","endLine":89,"endColumn":39},{"ruleId":"234","severity":1,"message":"262","line":173,"column":6,"nodeType":"236","endLine":173,"endColumn":20,"suggestions":"263"},{"ruleId":"207","severity":1,"message":"264","line":180,"column":9,"nodeType":"209","messageId":"210","endLine":180,"endColumn":15},{"ruleId":"207","severity":1,"message":"265","line":187,"column":9,"nodeType":"209","messageId":"210","endLine":187,"endColumn":16},{"ruleId":"251","severity":1,"message":"252","line":212,"column":13,"nodeType":"253","endLine":222,"endColumn":15},{"ruleId":"207","severity":1,"message":"211","line":4,"column":10,"nodeType":"209","messageId":"210","endLine":4,"endColumn":25},{"ruleId":"207","severity":1,"message":"256","line":54,"column":7,"nodeType":"209","messageId":"210","endLine":54,"endColumn":18},{"ruleId":"207","severity":1,"message":"257","line":62,"column":7,"nodeType":"209","messageId":"210","endLine":62,"endColumn":17},{"ruleId":"207","severity":1,"message":"243","line":72,"column":9,"nodeType":"209","messageId":"210","endLine":72,"endColumn":21},{"ruleId":"207","severity":1,"message":"226","line":104,"column":9,"nodeType":"209","messageId":"210","endLine":104,"endColumn":17},{"ruleId":"207","severity":1,"message":"264","line":127,"column":9,"nodeType":"209","messageId":"210","endLine":127,"endColumn":15},{"ruleId":"207","severity":1,"message":"265","line":134,"column":9,"nodeType":"209","messageId":"210","endLine":134,"endColumn":16},{"ruleId":"207","severity":1,"message":"266","line":140,"column":10,"nodeType":"209","messageId":"210","endLine":140,"endColumn":15},{"ruleId":"207","severity":1,"message":"267","line":140,"column":17,"nodeType":"209","messageId":"210","endLine":140,"endColumn":25},{"ruleId":"268","severity":1,"message":"269","line":149,"column":13,"nodeType":"253","endLine":161,"endColumn":15},{"ruleId":"207","severity":1,"message":"211","line":4,"column":10,"nodeType":"209","messageId":"210","endLine":4,"endColumn":25},{"ruleId":"207","severity":1,"message":"256","line":55,"column":7,"nodeType":"209","messageId":"210","endLine":55,"endColumn":18},{"ruleId":"207","severity":1,"message":"257","line":63,"column":7,"nodeType":"209","messageId":"210","endLine":63,"endColumn":17},{"ruleId":"207","severity":1,"message":"243","line":73,"column":9,"nodeType":"209","messageId":"210","endLine":73,"endColumn":21},{"ruleId":"207","severity":1,"message":"226","line":105,"column":9,"nodeType":"209","messageId":"210","endLine":105,"endColumn":17},{"ruleId":"207","severity":1,"message":"270","line":106,"column":9,"nodeType":"209","messageId":"210","endLine":106,"endColumn":17},{"ruleId":"207","severity":1,"message":"264","line":125,"column":9,"nodeType":"209","messageId":"210","endLine":125,"endColumn":15},{"ruleId":"207","severity":1,"message":"265","line":132,"column":9,"nodeType":"209","messageId":"210","endLine":132,"endColumn":16},{"ruleId":"207","severity":1,"message":"271","line":140,"column":10,"nodeType":"209","messageId":"210","endLine":140,"endColumn":20},{"ruleId":"207","severity":1,"message":"272","line":141,"column":10,"nodeType":"209","messageId":"210","endLine":141,"endColumn":23},{"ruleId":"207","severity":1,"message":"247","line":141,"column":25,"nodeType":"209","messageId":"210","endLine":141,"endColumn":41},{"ruleId":"207","severity":1,"message":"273","line":177,"column":13,"nodeType":"209","messageId":"210","endLine":177,"endColumn":20},{"ruleId":"207","severity":1,"message":"274","line":178,"column":13,"nodeType":"209","messageId":"210","endLine":178,"endColumn":20},{"ruleId":"268","severity":1,"message":"269","line":207,"column":13,"nodeType":"253","endLine":222,"endColumn":15},{"ruleId":"268","severity":1,"message":"269","line":225,"column":13,"nodeType":"253","endLine":241,"endColumn":15},{"ruleId":"207","severity":1,"message":"275","line":10,"column":7,"nodeType":"209","messageId":"210","endLine":10,"endColumn":21},{"ruleId":"207","severity":1,"message":"276","line":14,"column":7,"nodeType":"209","messageId":"210","endLine":14,"endColumn":17},"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'setIsImageFixed' is defined but never used.","'TestBottom' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'StaticSticker' is defined but never used.","'MainText' is defined but never used.","'HeaderWrap' is assigned a value but never used.","'FirstHeader' is assigned a value but never used.","'BackIcon' is assigned a value but never used.","'TextHeader' is assigned a value but never used.","'Text1' is assigned a value but never used.","'Text2' is assigned a value but never used.","'HostImg' is assigned a value but never used.","'BottomWrap' is assigned a value but never used.","'Bottom' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'MainHeader' is defined but never used.","'YellowCircle' is assigned a value but never used.","'CircleContainer' is assigned a value but never used.","'StyledImage' is assigned a value but never used.","'Div' is assigned a value but never used.","'menuOpen' is assigned a value but never used.","'handleMenuClick' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'images'. Either include it or remove the dependency array.","ArrayExpression",["277"],"'useParams' is defined but never used.","'CardWrap' is assigned a value but never used.","'OneFlip' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'imageData'. Either include it or remove the dependency array.",["278"],"'isImageFixed' is assigned a value but never used.","'imageUrl' is assigned a value but never used.","'setImageUrl' is assigned a value but never used.","'imagePosition' is assigned a value but never used.","'setImagePosition' is assigned a value but never used.","'isImageVisible' is assigned a value but never used.","'setIsImageVisible' is assigned a value but never used.","'hostImageUrl' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useDrag' is defined but never used.","'useGesture' is defined but never used.","'ZoomButtons' is assigned a value but never used.","'ZoomButton' is assigned a value but never used.","'bottomWidth' is assigned a value but never used.","'setBottomWidth' is assigned a value but never used.","'bottomHeight' is assigned a value but never used.","'setBottomHeight' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'imagePosition'. Either include it or remove the dependency array.",["279"],"'zoomIn' is assigned a value but never used.","'zoomOut' is assigned a value but never used.","'scale' is assigned a value but never used.","'setScale' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'navigate' is assigned a value but never used.","'dragOffset' is assigned a value but never used.","'ImagePosition' is assigned a value but never used.","'offsetX' is assigned a value but never used.","'offsetY' is assigned a value but never used.","'BackgroundWrap' is assigned a value but never used.","'Background' is assigned a value but never used.",{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},"Update the dependencies array to be: [images]",{"range":"286","text":"287"},"Update the dependencies array to be: [imageData]",{"range":"288","text":"289"},"Update the dependencies array to be: [imagePosition, isImageFixed]",{"range":"290","text":"291"},[3227,3229],"[images]",[5106,5108],"[imageData]",[4664,4678],"[imagePosition, isImageFixed]"]